{"version":3,"sources":["components/HeaderBigScreen/HeaderBigScreen.tsx","components/HeaderSmallScreen/HeaderSmallSceen.tsx","components/Header/Header.tsx","lib/homepage-background.jpg","pages/HomePage/HomePage.tsx","api/getPlants.ts","hooks/usePlants.ts","components/PlantCard/PlantCard.tsx","components/Loading/Loading.tsx","lib/something_went_wrong.jpg","components/Error/Error.tsx","pages/PlantsShopPage/PlantsShopPage.tsx","api/getPlant.ts","hooks/usePlant.ts","components/CustomSnackbar/CustomSnackbar.tsx","components/CountContext/CountContext.tsx","components/PlantDetails/PlantDetails.tsx","pages/PlantDetailPage/PlantDetailPage.tsx","components/LogInForm/LogInForm.tsx","api/postLogIn.ts","pages/LogInPage/LogInPage.tsx","hooks/useLogIn.ts","components/RegisterForm/RegisterForm.tsx","api/postRegister.ts","pages/RegisterPage/RegisterPage.tsx","hooks/useRegister.ts","utils.ts","api/getUserProfile.ts","hooks/useUserProfile.ts","pages/UserProfile/UserProfile.tsx","components/UserProfileUpdateForm/UserProfileUpdateForm.tsx","pages/UserProfileUpdate/UserProfileUpdate.tsx","components/CartItem/CartItem.tsx","pages/Cart/Cart.tsx","lib/parseJwt.ts","api/updateUserProfile.ts","components/DeleteConfirmation/DeleteConfirmation.tsx","api/deletePlant.ts","components/CreatePlantForm/CreatePlantForm.tsx","api/postCreatePlant.ts","components/EditPlantForm/EditPlantForm.tsx","api/updatePlant.ts","api/postPlantImage.ts","pages/AdminPlantListPage/AdminPlantListPage.tsx","hooks/usePlantImageUpload.ts","hooks/useCreatePlant.ts","hooks/useUpdatePlant.ts","hooks/useDeletePlant.ts","pages/CheckoutPage/CheckoutPage.tsx","pages/CheckoutPage/CheckoutShipping.tsx","api/postOrder.ts","pages/CheckoutPage/CheckoutPlaceOrder.tsx","hooks/useCreateOrder.ts","api/getOrder.ts","hooks/useOrder.ts","pages/OrderPage/OrderPage.tsx","components/PaymentForm/PaymentForm.tsx","api/postPaymentIntent.ts","pages/OrderPaymentPage/OrderPaymentPage.tsx","hooks/useCreatePaymentIntent.ts","api/putOrderToPaid.ts","pages/OrderPaymentSuccessPage/OrderPaymentSuccessPage.tsx","hooks/useUpdateOrderToPaid.ts","api/getMyOrders.ts","pages/MyOrdersPage/MyOrdersPage.tsx","hooks/useMyOrders.ts","App.tsx","hooks/useUpdateUserProfile.ts","index.tsx"],"names":["HeaderBigScreen","hasCartItems","hasTokenInLocalStorage","className","to","color","HeaderSmallScreen","fontSize","Header","HomePage","src","HomePageBackground","alt","getPlants","axios","method","url","then","response","data","usePlants","queryProps","useQuery","queryKey","queryFn","plants","plantsLoading","isLoading","plantsError","isError","PlantCard","image","name","price","id","Card","sx","maxWidth","CardActionArea","CardMedia","component","height","CardContent","Typography","gutterBottom","variant","align","Loading","Skeleton","width","Error","SomethingWentWrong","PlantsShopPage","map","plant","getPlant","usePlant","plantDetails","plantDetailsLoading","plantDetailsError","CustomSnackbar","React","props","ref","elevation","CountContext","undefined","CountProvider","children","value","state","count","setCount","Provider","PlantDetails","handleAddToCart","context","useCount","disableDecrement","setDisableDecrement","potSize","description","light","water","tips","toxicity","countInStock","openCartSuccessSnackbar","setOpenCartSuccessSnackbar","handleCloseSnackbar","event","reason","onClick","c","disabled","Button","parseInt","endIcon","Snackbar","open","autoHideDuration","onClose","severity","PlantDetailPage","useParams","LogInForm","handleLogIn","logInErrorMessage","useForm","mode","register","handleSubmit","errors","formState","onSubmit","htmlFor","email","required","pattern","message","type","placeholder","username","role","passward","minLength","password","config","headers","postLogIn","post","LogInPage","setLogInErrorMessage","postLogInFail","navigate","useNavigate","useMutation","formData","onSuccess","localStorage","setItem","token","onError","error","logIn","mutate","logInLoading","logInError","useLogIn","status","detail","RegisterForm","handleRegister","registerErrorMessage","RegisterPage","setRegisterErrorMessage","postRegisterError","postRegister","registerLoading","registerError","useRegister","getToken","getItem","Authorization","getUserProfile","get","useUserProfile","userProfile","userProfileLoading","userProfileError","UserProfile","handleLogOut","isUpdateUserProfileSuccess","updateUserProfileSuccessMessage","isAdmin","UserProfileUpdateForm","handleUserProfileUpdate","updateUserProfileErrorMessage","maxLength","CartItem","item","handleRemoveToCart","plantId","toString","quantity","Cart","cartArrayFromStorage","totalPrice","reduce","runningTotal","cartItem","plantUnitPrice","length","Divider","size","Link","parseJwt","base64","split","replace","jsonPayload","decodeURIComponent","atob","charCodeAt","slice","join","JSON","parse","updateUserProfile","put","DeleteConfirmation","handleDeletePlant","deleteId","closeDeleteModal","deletePlant","delete","CreatePlantForm","handleCreatePlant","closeCreatePlantModal","createFailMessage","onFileChange","IconButton","onChange","e","files","target","file","FormData","append","postCreatePlant","EditPlantForm","handleEditPlant","closeEditPlantModal","plantIdToEdit","editFailMessage","Boolean","filterByPlantSize","filterByLightRequirements","updatePlant","postPlantImage","a","AdminPlantList","createPlantModalIsOpen","setCreatePlantModalIsOpen","editPlantModalIsOpen","setEditPlantModalIsOpen","setPlantIdToEdit","deleteModalIsOpen","setDeleteModalIsOpen","setDeleteId","setCreateFailMessage","setEditFailMessage","fileToUpload","setFileToUpload","openCreatePlantSuccessSnackbar","setOpenCreatePlantSuccessSnackbar","openEditPlantSuccessSnackbar","setOpenEditPlantSuccessSnackbar","openDeletePlantSuccessSnackbar","setOpenDeletePlantSuccessSnackbar","openDeletePlantFailSnackbar","setOpenDeletePlantFailSnackbar","handleCreatePlantCloseSnackbar","handleEditPlantCloseSnackbar","handleDeletePlantCloseSnackbar","handleDeletePlantFailCloseSnackbar","queryClient","useQueryClient","mutationOptions","uploadPlantImage","plantImageUploadLoading","plantImageUploadError","usePlantImageUpload","invalidateQueries","exact","uploadFile","createPlantSuccess","createPlantFail","createPlant","createPlantLoading","createPlantError","useCreatePlant","editPlantSuccess","editPlantFail","updatePlantItem","updatePlantItemLoading","updatePlantItemError","useUpdatePlant","deletePlantSuccess","deletePlantFail","deletePlantItem","deletePlantItemLoading","deletePlantItemError","useDeletePlant","rows","Grid","container","direction","px","py","TableContainer","Paper","Table","minWidth","TableHead","TableRow","TableCell","TableBody","row","border","scope","isOpen","onRequestClose","contentLabel","ariaHideApp","overlayClassName","steps","label","CheckoutPage","pathname","useLocation","activeStep","find","includes","xs","Stepper","alternativeLabel","Step","StepLabel","formDefaultValues","address","city","postalCode","country","CheckoutShipping","defaultValues","control","spacing","values","stringify","rules","render","field","fieldState","TextField","fullWidth","helperText","postOrder","CheckoutPlaceOrder","emptyCart","theme","useTheme","isMobile","useMediaQuery","breakpoints","down","shippingInfo","storedShippingInfo","cartPlants","storedCartPlants","enabled","acc","currentPlant","plantInCart","qty","useGetPlantsInCart","createOrderSuccess","orderData","createOrder","createOrderLoading","createOrderError","useCreateOrder","containerDirection","itemsTotal","sum","curr","taxPrice","p","lg","my","Box","display","justifyContent","pt","borderRadius","borderTop","toFixed","shippingPrice","shippingAddress","paymentMethod","orderItems","mt","getOrder","useOrder","orderDetails","orderDetailsLoading","orderDetailsError","OrderPage","isDelivered","deliveredAt","isPaid","paidAt","total","Date","toLocaleDateString","year","month","day","weekday","hour","hour12","minute","second","RouterLink","PaymentForm","orderId","stripe","useStripe","elements","useElements","useSearchParams","searchParams","useState","setMessage","setIsLoading","useEffect","clientSecret","retrievePaymentIntent","paymentIntent","preventDefault","confirmPayment","confirmParams","return_url","window","location","origin","alignItems","LoadingButton","loading","loadingPosition","postPaymentIntent","stripePromise","loadStripe","process","appearance","variables","colorPrimary","OrderPaymentPage","useOrderAlreadyPaid","paymentData","createPaymentIntent","createPaymentIntentData","useCreatePaymentIntent","options","flexDirection","putOrderToPaid","OrderPaymentSuccessPage","payload","updateOrderToPaid","updateOrderToPaidLoading","updateOrderToPaidError","useUpdateOrderToPaid","paymentIntentId","AlertTitle","style","getMyOrders","MyOrdersPage","myOrders","myOrdersLoading","myOrdersError","useMyOrders","order","textDecoration","createdAt","QueryClient","defaultOptions","queries","refetchOnWindowFocus","Main","cartArray","setCartArray","setHasCartItems","setCartArrayFromStorage","setHasTokenInLocalStorage","setUpdateUserProfileErrorMessage","setIsUpdateUserProfileSuccess","removeItem","updateUserProfileSuccess","updateUserProfileError","userProfileUpdate","userProfileUpdateLoading","userProfileUpdateError","userProfileUpdateData","useUpdateUserProfile","localStorageCartItems","jwt","parsedJwt","exp","path","element","updatedCart","UserProfileUpdate","filter","App","client","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.83281142.chunk.js","sourcesContent":["import * as React from 'react';\nimport PersonOutlineOutlinedIcon from '@mui/icons-material/PersonOutlineOutlined';\nimport AddShoppingCartOutlinedIcon from '@mui/icons-material/AddShoppingCartOutlined';\nimport ShoppingCartOutlinedIcon from '@mui/icons-material/ShoppingCartOutlined';\nimport { Link } from 'react-router-dom';\nimport './HeaderBigScreen.css';\nimport { HeaderProps } from '../../types';\n\nconst HeaderBigScreen = ({\n  hasCartItems,\n  hasTokenInLocalStorage,\n}: HeaderProps) => {\n  return (\n    <header className=\"header\">\n      <div>\n        <Link to=\"/\" className=\"shop-heading\">\n          <h1>PLANTLEY</h1>\n        </Link>\n      </div>\n      <div>\n        <Link to=\"/\" className=\"header-links\">\n          <span>HOME</span>\n        </Link>\n        <Link to=\"/plants\" className=\"header-links shop\">\n          <span>SHOP</span>\n        </Link>\n      </div>\n      <ul className=\"profile-and-cart\">\n        <li>\n          {hasTokenInLocalStorage ? (\n            <Link to=\"/users/profile\">\n              <PersonOutlineOutlinedIcon className=\"header-icons user-icon\" />\n            </Link>\n          ) : (\n            <Link to=\"/login\">\n              <PersonOutlineOutlinedIcon className=\"header-icons user-icon\" />\n            </Link>\n          )}\n        </li>\n\n        <li className=\"cart-icon\">\n          <Link to=\"/cart\">\n            {hasCartItems ? (\n              <AddShoppingCartOutlinedIcon\n                className=\"header-icons basket-icon-plus\"\n                color=\"warning\"\n              />\n            ) : (\n              <ShoppingCartOutlinedIcon className=\"header-icons basket-icon\" />\n            )}\n          </Link>\n        </li>\n      </ul>\n    </header>\n  );\n};\n\nexport default HeaderBigScreen;\n","import * as React from 'react';\nimport AddShoppingCartOutlinedIcon from '@mui/icons-material/AddShoppingCartOutlined';\nimport ShoppingCartOutlinedIcon from '@mui/icons-material/ShoppingCartOutlined';\nimport { Link } from 'react-router-dom';\nimport './HeaderSmallScreen.css';\nimport { HeaderProps } from '../../types';\nimport MenuIcon from '@mui/icons-material/Menu';\n\nconst HeaderSmallScreen = ({\n  hasCartItems,\n  hasTokenInLocalStorage,\n}: HeaderProps) => {\n  return (\n    <header className=\"header-small\">\n      <nav className=\"navbar\">\n        <ul>\n          <div className=\"dropdown\">\n            <button className=\"dropbtn\">\n              <MenuIcon fontSize=\"large\" />\n            </button>\n            <div className=\"dropdown-content\">\n              <li>\n                <Link to=\"/\" className=\"header-links-small\">\n                  <span>HOME</span>\n                </Link>\n              </li>\n              <li>\n                <Link to=\"/plants\" className=\"header-links-small\">\n                  <span>SHOP</span>\n                </Link>\n              </li>\n              <li>\n                {hasTokenInLocalStorage ? (\n                  <Link to=\"/users/profile\" className=\"header-links-small\">\n                    <span>PROFILE</span>\n                  </Link>\n                ) : (\n                  <Link to=\"/login\" className=\"header-links-small\">\n                    <span>LOGIN</span>\n                  </Link>\n                )}\n              </li>\n            </div>\n          </div>\n        </ul>\n      </nav>\n      <div className=\"cart-small\">\n        <Link to=\"/cart\">\n          {hasCartItems ? (\n            <AddShoppingCartOutlinedIcon\n              className=\"header-icons basket-icon-plus\"\n              color=\"warning\"\n            />\n          ) : (\n            <ShoppingCartOutlinedIcon className=\"header-icons basket-icon\" />\n          )}\n        </Link>\n      </div>\n    </header>\n  );\n};\n\nexport default HeaderSmallScreen;\n","import * as React from \"react\";\nimport HeaderBigScreen from \"../HeaderBigScreen/HeaderBigScreen\";\nimport { HeaderProps } from \"../../types\";\nimport \"./Header.css\";\nimport HeaderSmallScreen from \"../HeaderSmallScreen/HeaderSmallSceen\";\n\nconst Header = ({ hasCartItems, hasTokenInLocalStorage }: HeaderProps) => {\n  return (\n    <>\n      <div className=\"header-big-screen\">\n        <HeaderBigScreen\n          hasCartItems={hasCartItems}\n          hasTokenInLocalStorage={hasTokenInLocalStorage}\n        />\n      </div>\n      <div className=\"header-small-screen\">\n        <HeaderSmallScreen\n          hasCartItems={hasCartItems}\n          hasTokenInLocalStorage={hasTokenInLocalStorage}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default Header;\n","export default __webpack_public_path__ + \"static/media/homepage-background.edbb654c.jpg\";","import * as React from \"react\";\nimport HomePageBackground from \"../../lib/homepage-background.jpg\";\nimport \"./HomePage.css\";\nimport { Link } from \"react-router-dom\";\n\nconst HomePage = () => {\n  return (\n    <section className=\"homepage\">\n      <div className=\"homepage-background\">\n        <div className=\"homepage-background-image-wrapper\">\n          <img\n            src={HomePageBackground}\n            alt=\"homepage background, monstera plant\"\n            className=\"homepage-background-image\"\n          />\n        </div>\n        <div className=\"banner-text\">\n          <Link to=\"/plants\" className=\"shop-now-link\">\n            Shop now\n          </Link>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default HomePage;\n","import axios from \"axios\";\n\nconst getPlants = () => {\n  return axios({\n    method: \"get\",\n    url: \"http://127.0.0.1:8000/api/plants/\",\n  }).then((response) => response.data);\n};\n\nexport default getPlants;\n","import { useQuery, UseQueryOptions } from 'react-query';\nimport getPlants from '../api/getPlants';\nimport { Plant } from '../types';\n\nexport const usePlants = (\n  queryProps: Partial<UseQueryOptions<Plant[]>> = {}\n) => {\n  const {\n    data: plants,\n    isLoading: plantsLoading,\n    isError: plantsError,\n  } = useQuery<Plant[]>({\n    queryKey: ['getPlants'],\n    queryFn: () => getPlants().then((data) => data),\n    ...queryProps,\n  });\n\n  return {\n    plants,\n    plantsLoading,\n    plantsError,\n  };\n};\n","import * as React from \"react\";\nimport Card from \"@mui/material/Card\";\nimport CardContent from \"@mui/material/CardContent\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport Typography from \"@mui/material/Typography\";\nimport { CardActionArea } from \"@mui/material\";\nimport \"./PlantCard.css\";\nimport { Link } from \"react-router-dom\";\n\ntype PlantCardProps = {\n  image: string;\n  name: string;\n  price: string;\n  id: number;\n};\n\nconst PlantCard = ({ image, name, price, id }: PlantCardProps) => {\n  return (\n    <Link to={`/plants/${id}`} className=\"plant-card-wrapper\">\n      <Card className=\"plant-card\" sx={{ maxWidth: 345 }}>\n        <CardActionArea>\n          <CardMedia\n            component=\"img\"\n            height=\"300\"\n            image={`http://127.0.0.1:8000${image}`}\n            alt={name}\n          />\n          <CardContent>\n            <Typography gutterBottom variant=\"h6\" component=\"h6\" align=\"center\">\n              {name}\n            </Typography>\n            <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\">\n              € {price}\n            </Typography>\n          </CardContent>\n        </CardActionArea>\n      </Card>\n    </Link>\n  );\n};\n\nexport default PlantCard;\n","import * as React from \"react\";\nimport Skeleton from \"@mui/material/Skeleton\";\nimport \"./Loading.css\";\n\nconst Loading = () => {\n  return (\n    <div className=\"skeleton-group-wrapper\">\n      <div className=\"skeleton-group\">\n        <div className=\"skeleton\">\n          <Skeleton variant=\"rectangular\" width=\"100%\" height={236} />\n          <Skeleton width=\"90%\" height={50} />\n          <Skeleton width=\"60%\" />\n        </div>\n        <div className=\"skeleton\">\n          <Skeleton variant=\"rectangular\" width=\"100%\" height={236} />\n          <Skeleton width=\"90%\" height={50} />\n          <Skeleton width=\"60%\" />\n        </div>\n        <div className=\"skeleton\">\n          <Skeleton variant=\"rectangular\" width=\"100%\" height={236} />\n          <Skeleton width=\"90%\" height={50} />\n          <Skeleton width=\"60%\" />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Loading;\n","export default __webpack_public_path__ + \"static/media/something_went_wrong.3dee8401.jpg\";","import * as React from \"react\";\nimport SomethingWentWrong from \"../../lib/something_went_wrong.jpg\";\nimport \"./Error.css\";\n\nconst Error = () => {\n  return (\n    <div className=\"error-wrapper\">\n      <div className=\"error\">\n        <div className=\"something-went-wrong-wrapper\">\n          <img\n            src={SomethingWentWrong}\n            alt=\"something went wrong banner\"\n            className=\"something-went-wrong\"\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Error;\n","import * as React from \"react\";\nimport { usePlants } from \"../../hooks/usePlants\";\nimport PlantCard from \"../../components/PlantCard/PlantCard\";\nimport { Plant } from \"../../types\";\nimport \"./PlantsShop.css\";\nimport Loading from \"../../components/Loading/Loading\";\nimport Error from \"../../components/Error/Error\";\n\nconst PlantsShopPage = () => {\n  const { plants, plantsLoading, plantsError } = usePlants();\n\n  return (\n    <>\n      {plantsLoading && <Loading />}\n      {plantsError && <Error />}\n      {plants && (\n        <section data-testid=\"plant-shop-page\" className=\"plant-shop-page\">\n          <h1>House Plants</h1>\n          <div className=\"plants-wrapper\">\n            <div className=\"plants\">\n              {plants.map((plant: Plant) => (\n                <PlantCard\n                  key={plant.id}\n                  image={plant.image}\n                  name={plant.name}\n                  price={plant.price}\n                  id={plant.id}\n                />\n              ))}\n            </div>\n          </div>\n        </section>\n      )}\n    </>\n  );\n};\n\nexport default PlantsShopPage;\n","import axios from \"axios\";\n\nconst getPlant = (id?: string) => {\n  return axios({\n    method: \"get\",\n    url: `http://127.0.0.1:8000/api/plants/${id}`,\n  }).then((response) => response.data);\n};\n\nexport default getPlant;\n","import { useQuery } from \"react-query\";\nimport getPlant from \"../api/getPlant\";\nimport { Plant } from \"../types\";\n\nexport const usePlant = (id?: string) => {\n  const {\n    data: plantDetails,\n    isLoading: plantDetailsLoading,\n    isError: plantDetailsError,\n  } = useQuery<Plant>({\n    queryKey: [\"getPlant\", id],\n    queryFn: () => getPlant(id).then((data) => data),\n  });\n\n  return {\n    plantDetails,\n    plantDetailsLoading,\n    plantDetailsError,\n  };\n};\n","import * as React from 'react';\nimport MuiAlert, { AlertProps } from '@mui/material/Alert';\n\nconst CustomSnackbar = React.forwardRef<HTMLDivElement, AlertProps>(\n  function Alert(props, ref) {\n    return <MuiAlert elevation={6} ref={ref} variant=\"standard\" {...props} />;\n  }\n);\n\nexport default CustomSnackbar;\n","import * as React from \"react\";\n\ntype State = { count: number };\ntype CountProviderProps = { children: React.ReactNode };\n\nconst CountContext = React.createContext<\n  | { state: State; setCount: React.Dispatch<React.SetStateAction<number>> }\n  | undefined\n>(undefined);\n\nfunction CountProvider({ children }: CountProviderProps) {\n  const [count, setCount] = React.useState(1);\n  const value = { state: { count }, setCount };\n\n  return (\n    <CountContext.Provider value={value}>{children}</CountContext.Provider>\n  );\n}\n\nfunction useCount() {\n  const context = React.useContext(CountContext);\n  if (context === undefined) {\n    throw new Error(\"useCount must be used within a CountProvider\");\n  }\n  return context;\n}\n\nexport { CountProvider, useCount };\n\n// const { state: { count }, setCount } = useCount()\n","import * as React from 'react';\nimport { Plant } from '../../types';\nimport Button from '@mui/material/Button';\nimport ShoppingBasketIcon from '@mui/icons-material/ShoppingBasket';\nimport CustomSnackbar from '../CustomSnackbar/CustomSnackbar';\nimport Snackbar from '@mui/material/Snackbar';\nimport Typography from '@mui/material/Typography';\nimport Alert from '@mui/material/Alert';\nimport './PlantDetails.css';\nimport { useCount } from '../CountContext/CountContext';\nimport { Link } from 'react-router-dom';\n\ntype PlantDetailsProp = {\n  plantDetails: Plant;\n  handleAddToCart: (\n    quantity: number,\n    plantId: number,\n    plantUnitPrice: number\n  ) => void;\n};\n\nconst PlantDetails = ({ plantDetails, handleAddToCart }: PlantDetailsProp) => {\n  const {\n    state: { count },\n    setCount,\n  } = useCount();\n\n  const [disableDecrement, setDisableDecrement] = React.useState(false);\n\n  const {\n    name,\n    image,\n    price,\n    potSize,\n    description,\n    light,\n    water,\n    tips,\n    toxicity,\n    countInStock,\n  } = plantDetails;\n\n  const increment = () => setCount((c) => c + 1);\n  const decrement = () => setCount((c) => c - 1);\n\n  React.useEffect(() => {\n    if (count <= 1) {\n      setDisableDecrement(true);\n    }\n    return () => {\n      setDisableDecrement(false);\n    };\n  }, [count]);\n\n  React.useEffect(() => {\n    return () => {\n      setCount(1);\n    };\n  }, [setCount]);\n\n  const handleSubmitCart = () => {\n    handleAddToCart(count, plantDetails.id, parseInt(plantDetails.price));\n    setOpenCartSuccessSnackbar(true);\n  };\n\n  const [openCartSuccessSnackbar, setOpenCartSuccessSnackbar] =\n    React.useState(false);\n\n  const handleCloseSnackbar = (\n    event?: React.SyntheticEvent | Event,\n    reason?: string\n  ) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpenCartSuccessSnackbar(false);\n  };\n\n  return (\n    <>\n      <div className=\"plant-details-wrapper\">\n        <div className=\"plant-details\">\n          <div className=\"pic-and-info\">\n            <div className=\"plant-img-wrapper\">\n              <img\n                src={`http://127.0.0.1:8000${image}`}\n                alt={name}\n                className=\"plant-img\"\n              />\n            </div>\n            <div className=\"info\">\n              <Typography\n                gutterBottom\n                variant=\"h3\"\n                component=\"h3\"\n                className=\"plant-name\"\n              >\n                {name}\n              </Typography>\n\n              <Typography\n                gutterBottom\n                variant=\"h5\"\n                component=\"h5\"\n                className=\"price\"\n              >\n                € {price}\n              </Typography>\n\n              {potSize && (\n                <Typography gutterBottom variant=\"body1\">\n                  Pot size: {potSize}\n                </Typography>\n              )}\n              <br />\n              {description && (\n                <>\n                  <Typography gutterBottom variant=\"h6\">\n                    Description\n                  </Typography>\n\n                  <Typography\n                    gutterBottom\n                    variant=\"body1\"\n                    component=\"p\"\n                    className=\"body-text\"\n                  >\n                    {description}\n                  </Typography>\n                </>\n              )}\n\n              <br />\n              <br />\n              {countInStock ? (\n                <div className=\"add-to-cart\">\n                  <div className=\"counter\">\n                    <button\n                      className={`counter-action ${\n                        disableDecrement ? 'disable-decrement' : 'decrement'\n                      }`}\n                      onClick={decrement}\n                      disabled={disableDecrement}\n                    >\n                      -\n                    </button>\n                    <span className=\"counter-score\">{count}</span>\n                    <button\n                      className=\"counter-action increment\"\n                      onClick={increment}\n                    >\n                      +\n                    </button>\n                  </div>\n                  <Button\n                    onClick={handleSubmitCart}\n                    variant=\"contained\"\n                    endIcon={<ShoppingBasketIcon />}\n                  >\n                    <Typography variant=\"button\"> add to cart</Typography>\n                  </Button>\n                  <div>\n                    <Snackbar\n                      open={openCartSuccessSnackbar}\n                      autoHideDuration={6000}\n                      onClose={handleCloseSnackbar}\n                    >\n                      <CustomSnackbar\n                        onClose={handleCloseSnackbar}\n                        severity=\"success\"\n                        sx={{ width: '100%' }}\n                      >\n                        {`You've successfully added ${count} ${name} to your `}\n                        <Link to=\"/cart\" className=\"cart-link\">\n                          cart\n                        </Link>\n                      </CustomSnackbar>\n                    </Snackbar>\n                  </div>\n                </div>\n              ) : (\n                <div>\n                  <Alert severity=\"warning\">\n                    Sorry, {name} is out of stock.\n                  </Alert>\n                </div>\n              )}\n              <br />\n            </div>\n          </div>\n          <br />\n\n          <div className=\"care-wrapper\">\n            <div className=\"care\">\n              {(light || water || toxicity) && (\n                <Typography gutterBottom variant=\"h6\">\n                  Care\n                </Typography>\n              )}\n\n              {light && (\n                <>\n                  <Typography gutterBottom variant=\"subtitle1\">\n                    Light\n                  </Typography>\n                  <Typography\n                    gutterBottom\n                    variant=\"body1\"\n                    className=\"body-text\"\n                  >\n                    {light}\n                  </Typography>\n                  <br />\n                </>\n              )}\n\n              {water && (\n                <>\n                  <Typography gutterBottom variant=\"subtitle1\">\n                    Water\n                  </Typography>\n                  <Typography\n                    gutterBottom\n                    variant=\"body1\"\n                    className=\"body-text\"\n                  >\n                    {water}\n                  </Typography>\n                  <br />\n\n                  <Typography gutterBottom variant=\"subtitle1\">\n                    Tips\n                  </Typography>\n                  <Typography\n                    gutterBottom\n                    variant=\"body1\"\n                    className=\"body-text\"\n                  >\n                    {tips}\n                  </Typography>\n                  <br />\n                </>\n              )}\n\n              {toxicity && (\n                <>\n                  <Typography gutterBottom variant=\"subtitle1\">\n                    Toxicity\n                  </Typography>\n                  <Typography\n                    gutterBottom\n                    variant=\"body1\"\n                    className=\"body-text\"\n                  >\n                    {toxicity}\n                  </Typography>\n                </>\n              )}\n\n              <br />\n              <br />\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default PlantDetails;\n","import * as React from \"react\";\nimport { usePlant } from \"../../hooks/usePlant\";\nimport { useParams } from \"react-router-dom\";\nimport Loading from \"../../components/Loading/Loading\";\nimport Error from \"../../components/Error/Error\";\nimport PlantDetails from \"../../components/PlantDetails/PlantDetails\";\n\ntype PlantDetailPageProp = {\n  handleAddToCart: (\n    quantity: number,\n    plantId: number,\n    plantUnitPrice: number\n  ) => void;\n};\n\nconst PlantDetailPage = ({ handleAddToCart }: PlantDetailPageProp) => {\n  const { id } = useParams();\n\n  const { plantDetails, plantDetailsLoading, plantDetailsError } = usePlant(id);\n  return (\n    <section>\n      {plantDetailsLoading && <Loading />}\n      {!plantDetailsLoading && plantDetailsError && <Error />}\n      {plantDetails && (\n        <PlantDetails\n          plantDetails={plantDetails}\n          handleAddToCart={handleAddToCart}\n        />\n      )}\n    </section>\n  );\n};\n\nexport default PlantDetailPage;\n","import * as React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { Link } from 'react-router-dom';\nimport { LogInData } from '../../types';\nimport '../../lib/shared/logInAndRegisterForm.css';\n\ntype LogInFormProps = {\n  handleLogIn: (data: LogInData) => void;\n  logInErrorMessage: string;\n};\n\nconst LogInForm = ({ handleLogIn, logInErrorMessage }: LogInFormProps) => {\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm({\n    mode: 'onBlur',\n  });\n\n  const onSubmit = (data: LogInData) => {\n    handleLogIn(data);\n  };\n\n  return (\n    <div className=\"form-wrapper\">\n      <form className=\"form\" onSubmit={handleSubmit(onSubmit)}>\n        <h1>Login</h1>\n        <section className=\"log-in\">\n          <label htmlFor=\"email\" className=\"label\">\n            Email Address\n          </label>\n          <input\n            id=\"username\"\n            aria-invalid={errors.email ? 'true' : 'false'}\n            {...register('username', {\n              required: 'This is required.',\n              pattern: {\n                value: /\\S+@\\S+\\.\\S+/,\n                message: 'Value does not match email format.',\n              },\n            })}\n            type=\"email\"\n            placeholder=\"Email\"\n          />\n          <div className=\"error-message-container\">\n            <p\n              className={\n                errors.username\n                  ? 'error-message'\n                  : 'error-message-hidden error-message'\n              }\n              role=\"alert\"\n            >\n              {errors.username && errors.username.message}\n            </p>\n          </div>\n          <label htmlFor=\"password\" className=\"label\">\n            Password\n          </label>\n          <input\n            id=\"password\"\n            aria-invalid={errors.passward ? 'true' : 'false'}\n            {...register('password', {\n              required: 'This is required.',\n              minLength: {\n                value: 5,\n                message: 'Minimum length is 5 characters.',\n              },\n            })}\n            type=\"password\"\n            placeholder=\"Password\"\n          />\n          <div className=\"error-message-container\">\n            <p\n              className={\n                errors.password\n                  ? 'error-message'\n                  : 'error-message-hidden error-message'\n              }\n              role=\"alert\"\n            >\n              {errors.password && errors.password.message}\n            </p>\n          </div>\n        </section>\n        <button type=\"submit\" className=\"submit\">\n          SUBMIT\n        </button>\n\n        {logInErrorMessage && (\n          <p className=\"incorrect-details\">{logInErrorMessage}</p>\n        )}\n      </form>\n      <p className=\"register-link\">\n        Don't have an account? <Link to=\"/register\">Register</Link>\n      </p>\n    </div>\n  );\n};\n\nexport default LogInForm;\n","import axios from \"axios\";\nimport { LogInData } from \"../types\";\n\nconst config = {\n  headers: {\n    \"Content-type\": \"application/json\",\n  },\n};\n\nconst postLogIn = (data: LogInData) => {\n  return axios\n    .post(\"http://127.0.0.1:8000/api/users/login\", data, config)\n    .then((response) => response.data);\n};\n\nexport default postLogIn;\n","import * as React from 'react';\nimport LogInForm from '../../components/LogInForm/LogInForm';\nimport { LogInData } from '../../types';\nimport { useLogIn } from '../../hooks/useLogIn';\nimport { AxiosError } from 'axios';\nimport '../../lib/shared/logInAndRegisterForm.css';\n\nconst LogInPage = () => {\n  const [logInErrorMessage, setLogInErrorMessage] = React.useState('');\n\n  const postLogInFail = (error: AxiosError) => {\n    if (error?.response?.status === 401) {\n      setLogInErrorMessage(error?.response?.data.detail);\n    } else {\n      setLogInErrorMessage('Something went wrong, please try again.');\n    }\n  };\n\n  const { logIn } = useLogIn(postLogInFail);\n\n  const handleLogIn = (data: LogInData) => {\n    logIn(data);\n  };\n\n  return (\n    <section className=\"log-in-page\">\n      <LogInForm\n        handleLogIn={handleLogIn}\n        logInErrorMessage={logInErrorMessage}\n      />\n    </section>\n  );\n};\n\nexport default LogInPage;\n","import { AxiosError } from \"axios\";\nimport { useMutation } from \"react-query\";\nimport postLogIn from \"../api/postLogIn\";\nimport { LogInData } from \"../types\";\nimport { useNavigate } from \"react-router-dom\";\n\nexport const useLogIn = (postLogInFail: (error: AxiosError) => void) => {\n  const navigate = useNavigate();\n\n  const {\n    mutate: logIn,\n    isLoading: logInLoading,\n    isError: logInError,\n  } = useMutation(\n    (formData: LogInData) => postLogIn(formData).then((data) => data),\n    {\n      onSuccess: (data) => {\n        localStorage.setItem(\"token\", data.token);\n        navigate(\"/users/profile\");\n      },\n      onError: (error: AxiosError) => {\n        postLogInFail(error);\n      },\n    }\n  );\n\n  return {\n    logIn,\n    logInLoading,\n    logInError,\n  };\n};\n","import * as React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { RegisterData } from '../../types';\nimport '../../lib/shared/logInAndRegisterForm.css';\n\ntype RegisterFormProps = {\n  handleRegister: (data: RegisterData) => void;\n  registerErrorMessage: string;\n};\n\nconst RegisterForm = ({\n  handleRegister,\n  registerErrorMessage,\n}: RegisterFormProps) => {\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm({\n    mode: 'onBlur',\n  });\n\n  const onSubmit = (data: RegisterData) => {\n    handleRegister(data);\n  };\n\n  return (\n    <div className=\"form-wrapper\">\n      <form className=\"form\" onSubmit={handleSubmit(onSubmit)}>\n        <h1>Sign Up</h1>\n        <section className=\"register\">\n          <label htmlFor=\"email\" className=\"label\">\n            Email Address\n          </label>\n          <input\n            id=\"email\"\n            aria-invalid={errors.email ? 'true' : 'false'}\n            {...register('email', {\n              required: 'This is required.',\n              pattern: {\n                value: /\\S+@\\S+\\.\\S+/,\n                message: 'Value does not match email format.',\n              },\n            })}\n            type=\"email\"\n            placeholder=\"Email\"\n          />\n          <div className=\"error-message-container\">\n            <p\n              className={\n                errors.email\n                  ? 'error-message'\n                  : 'error-message-hidden error-message'\n              }\n              role=\"alert\"\n            >\n              {errors.email && errors.email.message}\n            </p>\n          </div>\n          <label htmlFor=\"name\" className=\"label\">\n            Full Name\n          </label>\n          <input\n            id=\"name\"\n            aria-invalid={errors.name ? 'true' : 'false'}\n            {...register('name', {\n              required: 'This is required.',\n              minLength: {\n                value: 3,\n                message: 'Minimum length is 3 characters.',\n              },\n            })}\n            type=\"text\"\n            placeholder=\"Full Name\"\n          />\n          <div className=\"error-message-container\">\n            <p\n              className={\n                errors.name\n                  ? 'error-message'\n                  : 'error-message-hidden error-message'\n              }\n              role=\"alert\"\n            >\n              {errors.name && errors.name.message}\n            </p>\n          </div>\n          <label htmlFor=\"password\" className=\"label\">\n            Password\n          </label>\n          <input\n            id=\"password\"\n            aria-invalid={errors.passward ? 'true' : 'false'}\n            {...register('password', {\n              required: 'This is required.',\n              minLength: {\n                value: 5,\n                message: 'Minimum length is 5 characters.',\n              },\n            })}\n            type=\"password\"\n            placeholder=\"Password\"\n          />\n          <div className=\"error-message-container\">\n            <p\n              className={\n                errors.password\n                  ? 'error-message'\n                  : 'error-message-hidden error-message'\n              }\n              role=\"alert\"\n            >\n              {errors.password && errors.password.message}\n            </p>\n          </div>\n        </section>\n        <button type=\"submit\" className=\"submit\">\n          SUBMIT\n        </button>\n\n        {registerErrorMessage && (\n          <p className=\"incorrect-details\">{registerErrorMessage}</p>\n        )}\n      </form>\n    </div>\n  );\n};\n\nexport default RegisterForm;\n","import axios from \"axios\";\nimport { RegisterData } from \"../types\";\n\nconst config = {\n  headers: {\n    \"Content-type\": \"application/json\",\n  },\n};\n\nconst postLogIn = (data: RegisterData) => {\n  return axios\n    .post(\"http://127.0.0.1:8000/api/users/register\", data, config)\n    .then((response) => response.data);\n};\n\nexport default postLogIn;\n","import { AxiosError } from \"axios\";\nimport * as React from \"react\";\nimport RegisterForm from \"../../components/RegisterForm/RegisterForm\";\nimport { useRegister } from \"../../hooks/useRegister\";\nimport { RegisterData } from \"../../types\";\n\nconst RegisterPage = () => {\n  const [registerErrorMessage, setRegisterErrorMessage] = React.useState(\"\");\n\n  const postRegisterFail = (error: AxiosError) => {\n    if (error?.response?.status === 400 || error?.response?.status === 401) {\n      setRegisterErrorMessage(error?.response?.data.detail);\n    } else {\n      setRegisterErrorMessage(\"Something went wrong, please try again.\");\n    }\n  };\n\n  const { register } = useRegister(postRegisterFail);\n\n  const handleRegister = (data: RegisterData) => {\n    register(data);\n  };\n\n  return (\n    <section className=\"register-page\">\n      <RegisterForm\n        handleRegister={handleRegister}\n        registerErrorMessage={registerErrorMessage}\n      />\n    </section>\n  );\n};\n\nexport default RegisterPage;\n","import { AxiosError } from \"axios\";\nimport { useMutation } from \"react-query\";\nimport postRegister from \"../api/postRegister\";\nimport { RegisterData } from \"../types\";\nimport { useNavigate } from \"react-router-dom\";\n\nexport const useRegister = (postRegisterError: (error: AxiosError) => void) => {\n  const navigate = useNavigate();\n\n  const {\n    mutate: register,\n    isLoading: registerLoading,\n    isError: registerError,\n  } = useMutation(\n    (formData: RegisterData) => postRegister(formData).then((data) => data),\n    {\n      onSuccess: (data) => {\n        localStorage.setItem(\"token\", data.token);\n        navigate(\"/users/profile\");\n      },\n      onError: (error: AxiosError) => {\n        postRegisterError(error);\n      },\n    }\n  );\n\n  return {\n    register,\n    registerLoading,\n    registerError,\n  };\n};\n","export const getToken = () => `Bearer ${localStorage.getItem('token')!}`;\n","import axios from 'axios';\nimport { getToken } from '../utils';\n\nconst config = {\n  headers: {\n    Authorization: getToken(),\n  },\n};\n\nconst getUserProfile = () => {\n  return axios\n    .get('http://127.0.0.1:8000/api/users/profile', config)\n    .then((response) => response.data);\n};\n\nexport default getUserProfile;\n","import { useQuery } from 'react-query';\nimport getUserProfile from '../api/getUserProfile';\nimport { UserProfileResponse } from '../types';\n\nexport const useUserProfile = () => {\n  const {\n    data: userProfile,\n    isLoading: userProfileLoading,\n    isError: userProfileError,\n  } = useQuery<UserProfileResponse>({\n    queryKey: ['getUserProfile'],\n    queryFn: () => getUserProfile().then((data) => data),\n  });\n\n  return {\n    userProfile,\n    userProfileLoading,\n    userProfileError,\n  };\n};\n","import * as React from 'react';\nimport { useUserProfile } from '../../hooks/useUserProfile';\nimport Loading from '../../components/Loading/Loading';\nimport Error from '../../components/Error/Error';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport LogoutOutlinedIcon from '@mui/icons-material/LogoutOutlined';\nimport './UserProfile.css';\nimport { Link } from 'react-router-dom';\nimport Alert from '@mui/material/Alert';\n\ntype UserProfileProps = {\n  handleLogOut: () => void;\n  isUpdateUserProfileSuccess: boolean;\n  updateUserProfileSuccessMessage: () => void;\n};\n\nconst UserProfile = ({\n  handleLogOut,\n  isUpdateUserProfileSuccess,\n  updateUserProfileSuccessMessage,\n}: UserProfileProps) => {\n  const { userProfile, userProfileLoading, userProfileError } =\n    useUserProfile();\n\n  if (userProfileLoading) {\n    return <Loading />;\n  }\n\n  if (!userProfileLoading && userProfileError) {\n    return <Error />;\n  }\n\n  return (\n    <section className=\"user-profile-wrapper\">\n      {userProfile && (\n        <div className=\"user-profile\">\n          <div className=\"heading-and-logout\">\n            <h1>Account Details </h1>\n            <Button\n              onClick={() => handleLogOut()}\n              variant=\"contained\"\n              endIcon={<LogoutOutlinedIcon />}\n            >\n              <Typography variant=\"button\"> Logout </Typography>\n            </Button>\n          </div>\n          <Typography gutterBottom variant=\"h6\" className=\"welcome-name\">\n            Welcome, {userProfile.name}\n          </Typography>\n          <div className=\"update-profile-link-wrapper\">\n            <Link to=\"/users/profile/update\" className=\"update-profile-link\">\n              Update Profile\n            </Link>\n          </div>\n          {isUpdateUserProfileSuccess && (\n            <Alert\n              sx={{ width: '50%' }}\n              severity=\"success\"\n              className=\"update-profile-success-message\"\n              onClose={updateUserProfileSuccessMessage}\n            >\n              Your profile was updated successfully!\n            </Alert>\n          )}\n          <div className=\"admin-functionality\">\n            <h1>My Orders</h1>\n            <div className=\"manage-profile-link-wrapper\">\n              <Link to=\"/myorders\" className=\"manage-profile-link\">\n                See Orders\n              </Link>\n            </div>\n          </div>\n          {userProfile?.isAdmin && (\n            <div className=\"admin-functionality\">\n              <h1>Admin Functionality </h1>\n              <div className=\"manage-profile-link-wrapper\">\n                <Link to=\"/admin/plantlist\" className=\"manage-profile-link\">\n                  Manage Products\n                </Link>\n              </div>\n            </div>\n          )}\n        </div>\n      )}\n    </section>\n  );\n};\n\nexport default UserProfile;\n","import * as React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { Link } from 'react-router-dom';\nimport { RegisterData, UserProfileResponse } from '../../types';\nimport './UserProfileUpdateForm.css';\n\ntype UserProfileUpdateFormProps = {\n  userProfile: UserProfileResponse;\n  handleUserProfileUpdate: (data: RegisterData) => void;\n  updateUserProfileErrorMessage: string;\n};\n\nconst UserProfileUpdateForm = ({\n  userProfile,\n  handleUserProfileUpdate,\n  updateUserProfileErrorMessage,\n}: UserProfileUpdateFormProps) => {\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm({\n    mode: 'onBlur',\n  });\n\n  const onSubmit = (data: RegisterData) => {\n    handleUserProfileUpdate(data);\n  };\n\n  return (\n    <div className=\"user-update-form-wrapper\">\n      <form className=\"form\" onSubmit={handleSubmit(onSubmit)}>\n        <section className=\"register\">\n          <label htmlFor=\"email\" className=\"label\">\n            Email Address\n          </label>\n          <input\n            id=\"email\"\n            aria-invalid={errors.email ? 'true' : 'false'}\n            {...register('email', {\n              required: 'This is required.',\n              maxLength: 20,\n              pattern: {\n                value: /\\S+@\\S+\\.\\S+/,\n                message: 'Value does not match email format.',\n              },\n              value: userProfile?.username,\n            })}\n            type=\"email\"\n          />\n          <div className=\"error-message-container\">\n            <p\n              className={\n                errors.email\n                  ? 'error-message'\n                  : 'error-message-hidden error-message'\n              }\n              role=\"alert\"\n            >\n              {errors.email && errors.email.message}\n            </p>\n          </div>\n          <label htmlFor=\"name\" className=\"label\">\n            Full Name\n          </label>\n          <input\n            id=\"name\"\n            aria-invalid={errors.name ? 'true' : 'false'}\n            {...register('name', {\n              required: 'This is required.',\n              minLength: {\n                value: 3,\n                message: 'Minimum length is 3 characters.',\n              },\n              value: userProfile?.name,\n            })}\n            type=\"text\"\n          />\n          <div className=\"error-message-container\">\n            <p\n              className={\n                errors.name\n                  ? 'error-message'\n                  : 'error-message-hidden error-message'\n              }\n              role=\"alert\"\n            >\n              {errors.name && errors.name.message}\n            </p>\n          </div>\n          <label htmlFor=\"password\" className=\"label\">\n            Password\n          </label>\n          <input\n            id=\"password\"\n            aria-invalid={errors.passward ? 'true' : 'false'}\n            {...register('password', {\n              minLength: {\n                value: 5,\n                message: 'Minimum length is 5 characters.',\n              },\n            })}\n            type=\"password\"\n            placeholder=\"Password\"\n          />\n          <div className=\"error-message-container\">\n            <p\n              className={\n                errors.password\n                  ? 'error-message'\n                  : 'error-message-hidden error-message'\n              }\n              role=\"alert\"\n            >\n              {errors.password && errors.password.message}\n            </p>\n          </div>\n        </section>\n        <div className=\"update-details-buttons\">\n          <Link to=\"/users/profile\" className=\"cancel-update\">\n            CANCEL\n          </Link>\n          <button type=\"submit\" className=\"submit-update\">\n            SUBMIT\n          </button>\n        </div>\n\n        {updateUserProfileErrorMessage && (\n          <p className=\"incorrect-details\">{updateUserProfileErrorMessage}</p>\n        )}\n      </form>\n    </div>\n  );\n};\n\nexport default UserProfileUpdateForm;\n","import * as React from 'react';\nimport { useUserProfile } from '../../hooks/useUserProfile';\nimport Loading from '../../components/Loading/Loading';\nimport Error from '../../components/Error/Error';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport LogoutOutlinedIcon from '@mui/icons-material/LogoutOutlined';\nimport './UserProfile.css';\nimport UserProfileUpdateForm from '../../components/UserProfileUpdateForm/UserProfileUpdateForm';\nimport { RegisterData } from '../../types';\n\ntype UserProfileProps = {\n  handleLogOut: () => void;\n  updateUserProfileErrorMessage: string;\n  handleUserProfileUpdate: (data: RegisterData) => void;\n};\n\nconst UserProfile = ({\n  handleLogOut,\n  updateUserProfileErrorMessage,\n  handleUserProfileUpdate,\n}: UserProfileProps) => {\n  const { userProfile, userProfileLoading, userProfileError } =\n    useUserProfile();\n\n  if (userProfileLoading) {\n    return <Loading />;\n  }\n\n  if (!userProfileLoading && userProfileError) {\n    return <Error />;\n  }\n\n  return (\n    <section className=\"user-profile-wrapper\">\n      {userProfile && (\n        <div className=\"user-profile\">\n          <div className=\"heading-and-logout\">\n            <h1>Account Details </h1>\n            <Button\n              onClick={() => handleLogOut()}\n              variant=\"contained\"\n              endIcon={<LogoutOutlinedIcon />}\n            >\n              <Typography variant=\"button\"> Logout </Typography>\n            </Button>\n          </div>\n          <Typography\n            gutterBottom\n            variant=\"h6\"\n            className=\"user-profile-update-heading\"\n          >\n            Update your profile\n          </Typography>\n          <div className=\"user-profile-update-form\">\n            <UserProfileUpdateForm\n              userProfile={userProfile}\n              updateUserProfileErrorMessage={updateUserProfileErrorMessage}\n              handleUserProfileUpdate={handleUserProfileUpdate}\n            />\n          </div>\n        </div>\n      )}\n    </section>\n  );\n};\n\nexport default UserProfile;\n","import * as React from 'react';\nimport Typography from '@mui/material/Typography';\nimport './CartItem.css';\nimport { usePlant } from '../../hooks/usePlant';\nimport Loading from '../Loading/Loading';\nimport Error from '../Error/Error';\nimport DeleteIcon from '@mui/icons-material/Clear';\nimport Button from '@mui/material/Button';\n\ntype CartItemProps = {\n  item: {\n    plantId: number;\n    quantity: number;\n  };\n  handleRemoveToCart: (plantId: number) => void;\n};\n\nconst CartItem = ({ item, handleRemoveToCart }: CartItemProps) => {\n  const { plantDetails, plantDetailsLoading, plantDetailsError } = usePlant(\n    item.plantId.toString()\n  );\n\n  const price = item.quantity * parseInt(plantDetails?.price as string);\n\n  return (\n    <>\n      {plantDetailsLoading && <Loading />}\n      {plantDetailsError && <Error />}\n      {plantDetails && (\n        <div className=\"cart-item\">\n          <div className=\"cart-item-details\">\n            <div className=\"cart-img-wrapper\">\n              <img\n                src={`http://127.0.0.1:8000${plantDetails.image}`}\n                alt={plantDetails.name}\n                className=\"cart-img\"\n              />\n            </div>\n            <div className=\"name-and-size\">\n              <Typography gutterBottom variant=\"h5\" component=\"h5\">\n                {`${plantDetails.name}, ${plantDetails.potSize}`}\n              </Typography>\n              <div className=\"quantity-and-unit-price\">\n                <Typography gutterBottom variant=\"body1\">\n                  Quantity: {item.quantity}\n                </Typography>\n                <Typography gutterBottom variant=\"body1\" className=\"unit-price\">\n                  Unit Price: {`€ ${plantDetails.price}`}\n                </Typography>\n              </div>\n              <Typography gutterBottom variant=\"h6\">\n                Total: {`€ ${price}`}\n              </Typography>\n              <Button\n                onClick={() => handleRemoveToCart(plantDetails.id)}\n                variant=\"contained\"\n                endIcon={<DeleteIcon />}\n                className=\"remove-cart-button\"\n                color=\"warning\"\n              >\n                <Typography variant=\"button\"> Remove from cart </Typography>\n              </Button>\n            </div>\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default CartItem;\n","import * as React from 'react';\nimport './Cart.css';\nimport CartItem from '../../components/CartItem/CartItem';\nimport { Link } from 'react-router-dom';\nimport Divider from '@mui/material/Divider';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\n\ntype CartProps = {\n  cartArrayFromStorage: {\n    plantId: number;\n    quantity: number;\n    plantUnitPrice: number;\n  }[];\n  handleRemoveToCart: (plantId: number) => void;\n};\n\nconst Cart = ({ cartArrayFromStorage, handleRemoveToCart }: CartProps) => {\n  const totalPrice = cartArrayFromStorage.reduce((runningTotal, cartItem) => {\n    return runningTotal + cartItem.quantity * cartItem.plantUnitPrice;\n  }, 0);\n\n  return (\n    <div className=\"cart\">\n      <div className=\"cart-heading\">\n        {cartArrayFromStorage.length > 0 ? (\n          <h1 className=\"cart-heading\">Your cart</h1>\n        ) : (\n          <>\n            <h1 className=\"cart-heading-empty\">\n              Your cart is currently empty.\n            </h1>\n            <Link to=\"/plants\" className=\"shop-cart-link\">\n              Shop now\n            </Link>\n          </>\n        )}\n      </div>\n\n      <div className=\"cart-items\">\n        {cartArrayFromStorage.map((item) => (\n          <React.Fragment key={item.plantId}>\n            <CartItem item={item} handleRemoveToCart={handleRemoveToCart} />\n            <Divider variant=\"middle\" />\n          </React.Fragment>\n        ))}\n      </div>\n      {!!cartArrayFromStorage.length && (\n        <>\n          <h1 className=\"total-price\">Total Price: € {`${totalPrice}`} </h1>\n          <Button\n            variant=\"contained\"\n            size=\"large\"\n            component={Link}\n            to=\"/checkout/shipping\"\n            className=\"checkout-button\"\n          >\n            <Typography variant=\"button\"> Checkout </Typography>\n          </Button>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Cart;\n","const parseJwt = (token: string) => {\n  const base64Url = token.split(\".\")[1];\n  const base64 = base64Url.replace(/-/g, \"+\").replace(/_/g, \"/\");\n  const jsonPayload = decodeURIComponent(\n    atob(base64)\n      .split(\"\")\n      .map(function (c) {\n        return \"%\" + (\"00\" + c.charCodeAt(0).toString(16)).slice(-2);\n      })\n      .join(\"\")\n  );\n\n  return JSON.parse(jsonPayload);\n};\n\nexport default parseJwt;\n","import axios from 'axios';\nimport { RegisterData } from '../types';\nimport { getToken } from '../utils';\n\nconst updateUserProfile = (data: RegisterData) => {\n  const config = {\n    headers: {\n      Authorization: getToken(),\n      'Content-type': 'application/json',\n    },\n  };\n  return axios\n    .put('http://127.0.0.1:8000/api/users/profile/update', data, config)\n    .then((response) => response.data);\n};\n\nexport default updateUserProfile;\n","import * as React from \"react\";\nimport Button from \"@mui/material/Button\";\nimport \"./DeleteConfirmation.css\";\n\ntype DeleteConfirmaionProps = {\n  handleDeletePlant: (id: string) => void;\n  deleteId: string;\n  closeDeleteModal: () => void;\n};\n\nconst DeleteConfirmation = ({\n  handleDeletePlant,\n  deleteId,\n  closeDeleteModal,\n}: DeleteConfirmaionProps) => {\n  return (\n    <div className=\"delete-confirmation\">\n      <h1> Are you sure?</h1>\n      <div className=\"delete-options\">\n        <Button\n          className=\"yes\"\n          variant=\"contained\"\n          color=\"error\"\n          onClick={() => handleDeletePlant(deleteId)}\n        >\n          Yes, delete this plant.\n        </Button>\n        <Button variant=\"contained\" color=\"inherit\" onClick={closeDeleteModal}>\n          No, don't delete.\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default DeleteConfirmation;\n","import axios from 'axios';\nimport { getToken } from '../utils';\n\nconst deletePlant = (id: string) => {\n  const config = {\n    headers: {\n      Authorization: getToken(),\n      'Content-type': 'application/json',\n    },\n  };\n\n  return axios\n    .delete(`http://127.0.0.1:8000/api/plants/delete/${id}`, config)\n    .then((response) => response.data);\n};\n\nexport default deletePlant;\n","import * as React from 'react';\nimport Button from '@mui/material/Button';\nimport { useForm } from 'react-hook-form';\nimport './CreatePlantForm.css';\nimport Typography from '@mui/material/Typography';\nimport { IconButton } from '@mui/material';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { CreateOrEditPlantData } from '../../types';\n\ntype CreatePlantFormProps = {\n  handleCreatePlant: (data: CreateOrEditPlantData) => void;\n  closeCreatePlantModal: () => void;\n  createFailMessage: string;\n  onFileChange: (formData: FormData) => void;\n};\n\nconst CreatePlantForm = ({\n  handleCreatePlant,\n  closeCreatePlantModal,\n  createFailMessage,\n  onFileChange,\n}: CreatePlantFormProps) => {\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm({\n    mode: 'onBlur',\n  });\n\n  const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const files = e.target.files;\n    if (files) {\n      const file = files[0];\n      const formData = new FormData();\n      formData.append('image', file);\n      onFileChange(formData);\n    }\n  };\n\n  const onSubmit = (data: CreateOrEditPlantData) => {\n    handleCreatePlant(data);\n  };\n\n  return (\n    <div>\n      <div className=\"create-plant-form-wrapper\">\n        <form className=\"create-plant-form\" onSubmit={handleSubmit(onSubmit)}>\n          <div className=\"heading-and-close\">\n            <h1>Create a plant item</h1>\n            <IconButton onClick={closeCreatePlantModal}>\n              <CloseIcon />\n            </IconButton>\n          </div>\n          <section>\n            <div className=\"plant-label-and-input\">\n              <label htmlFor=\"name\" className=\"label\">\n                Plant Name\n              </label>\n              <input\n                id=\"name\"\n                aria-invalid={errors.name ? 'true' : 'false'}\n                {...register('name', {\n                  required: 'This is required.',\n                })}\n                type=\"text\"\n                placeholder=\"Plant Name\"\n              />\n            </div>\n            <div className=\"error-message-container plant\">\n              <p\n                className={\n                  errors.name\n                    ? 'error-message plant-form-error'\n                    : 'error-message-hidden error-message plant-form-error'\n                }\n                role=\"alert\"\n              >\n                {errors.name && errors.name.message}\n              </p>\n            </div>\n\n            <div className=\"plant-label-and-input\">\n              <label htmlFor=\"price\" className=\"label\">\n                Price\n              </label>\n              <input\n                id=\"price\"\n                aria-invalid={errors.passward ? 'true' : 'false'}\n                {...register('price', {\n                  required: 'This is required.',\n                })}\n                type=\"text\"\n                placeholder=\"Price\"\n              />\n            </div>\n            <div className=\"error-message-container\">\n              <p\n                className={\n                  errors.price\n                    ? 'error-message plant-form-error'\n                    : 'error-message-hidden error-message plant-form-error'\n                }\n                role=\"alert\"\n              >\n                {errors.price && errors.price.message}\n              </p>\n            </div>\n\n            <div className=\"plant-label-and-input\">\n              <label htmlFor=\"countInStock\" className=\"label\">\n                Count\n              </label>\n              <input\n                id=\"countInStock\"\n                {...register('countInStock', {\n                  required: 'This is required.',\n                })}\n                type=\"number\"\n                placeholder=\"Count in stock\"\n              />\n            </div>\n            <div className=\"error-message-container\">\n              <p\n                className={\n                  errors.price\n                    ? 'error-message plant-form-error'\n                    : 'error-message-hidden error-message plant-form-error'\n                }\n                role=\"alert\"\n              >\n                {errors.countInStock && errors.countInStock.message}\n              </p>\n            </div>\n\n            <div className=\"plant-label-and-image-input\">\n              <label htmlFor=\"image\" className=\"label\">\n                Plant Image\n              </label>\n              <input\n                id=\"image\"\n                {...register('image')}\n                type=\"file\"\n                placeholder=\"image\"\n                className=\"image\"\n                onChange={handleFileChange}\n              />\n            </div>\n\n            <div className=\"plant-label-and-input pot-size-wrapper\">\n              <label htmlFor=\"potSize\" className=\"label\">\n                Pot Size\n              </label>\n              <input\n                id=\"potSize\"\n                {...register('potSize')}\n                type=\"text\"\n                placeholder=\"Pot Size\"\n              />\n            </div>\n\n            <div className=\"plant-label-and-input input-margin-top\">\n              <label htmlFor=\"description\" className=\"label\">\n                Description\n              </label>\n              <textarea\n                id=\"description\"\n                {...register('description')}\n                placeholder=\"Description\"\n                className=\"textarea\"\n              />\n            </div>\n\n            <div className=\"plant-label-and-input input-margin-top\">\n              <label htmlFor=\"potSize\" className=\"label\">\n                Plant Size\n              </label>\n              <input\n                id=\"filterByPlantSize\"\n                {...register('filterByPlantSize')}\n                type=\"text\"\n                placeholder=\"Plant size\"\n              />\n            </div>\n\n            <div className=\"plant-label-and-input input-margin-top\">\n              <label htmlFor=\"ligtReq\" className=\"label\">\n                Light\n              </label>\n              <input\n                id=\"filterByLightRequirements\"\n                {...register('filterByLightRequirements')}\n                type=\"text\"\n                placeholder=\"Light requirements\"\n              />\n            </div>\n\n            <div className=\"plant-label-and-input input-margin-top\">\n              <label htmlFor=\"light\" className=\"label\">\n                Light\n              </label>\n              <textarea\n                id=\"light\"\n                {...register('light')}\n                placeholder=\"Light description\"\n                className=\"textarea\"\n              />\n            </div>\n\n            <div className=\"plant-label-and-input input-margin-top\">\n              <label htmlFor=\"water\" className=\"label\">\n                Water\n              </label>\n              <textarea\n                id=\"water\"\n                {...register('water')}\n                placeholder=\"Water description\"\n                className=\"textarea\"\n              />\n            </div>\n\n            <div className=\"plant-label-and-input input-margin-top\">\n              <label htmlFor=\"tips\" className=\"label\">\n                Tips\n              </label>\n              <textarea\n                id=\"tips\"\n                {...register('tips')}\n                placeholder=\"Tips description\"\n                className=\"textarea\"\n              />\n            </div>\n            <div className=\"plant-label-and-input input-margin-top\">\n              <label htmlFor=\"toxicity\" className=\"label\">\n                Toxicity\n              </label>\n              <textarea\n                id=\"toxicity\"\n                {...register('toxicity')}\n                placeholder=\"Toxicity description\"\n                className=\"textarea\"\n              />\n            </div>\n          </section>\n\n          <div className=\"create-plant-butttons-wrapper\">\n            <div className=\"create-plant-buttons\">\n              {createFailMessage && (\n                <p className=\"incorrect-details\">{createFailMessage}</p>\n              )}\n              <Button\n                onClick={closeCreatePlantModal}\n                variant=\"contained\"\n                color=\"inherit\"\n              >\n                <Typography variant=\"button\"> Cancel</Typography>\n              </Button>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                className=\"create-plant-submit-button\"\n                type=\"submit\"\n              >\n                <Typography variant=\"button\"> Create</Typography>\n              </Button>\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default CreatePlantForm;\n","import axios from 'axios';\nimport { CreateOrEditPlantData } from '../types';\nimport { getToken } from '../utils';\n\nconst postCreatePlant = (data: CreateOrEditPlantData) => {\n  const config = {\n    headers: {\n      Authorization: getToken(),\n      'Content-type': 'application/json',\n    },\n  };\n  return axios\n    .post('http://127.0.0.1:8000/api/plants/create', data, config)\n    .then((response) => response.data);\n};\n\nexport default postCreatePlant;\n","import * as React from 'react';\nimport Button from '@mui/material/Button';\nimport { useForm } from 'react-hook-form';\nimport './EditPlantForm.css';\nimport Typography from '@mui/material/Typography';\nimport { IconButton } from '@mui/material';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { CreateOrEditPlantData } from '../../types';\nimport { usePlant } from '../../hooks/usePlant';\nimport './EditPlantForm.css';\n\ntype EditPlantFormProps = {\n  handleEditPlant: (data: CreateOrEditPlantData) => void;\n  closeEditPlantModal: () => void;\n  plantIdToEdit: string;\n  editFailMessage: string;\n  onFileChange: (formData: FormData) => void;\n};\n\nconst EditPlantForm = ({\n  handleEditPlant,\n  closeEditPlantModal,\n  plantIdToEdit,\n  editFailMessage,\n  onFileChange,\n}: EditPlantFormProps) => {\n  const { plantDetails } = usePlant(plantIdToEdit);\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm({\n    mode: 'onBlur',\n  });\n\n  const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const files = e.target.files;\n    if (files) {\n      const file = files[0];\n      const formData = new FormData();\n      formData.append('image', file);\n      onFileChange(formData);\n    }\n  };\n\n  const onSubmit = (data: CreateOrEditPlantData) => {\n    handleEditPlant(data);\n  };\n\n  return (\n    <div>\n      {plantDetails && (\n        <div className=\"create-plant-form-wrapper\">\n          <form className=\"create-plant-form\" onSubmit={handleSubmit(onSubmit)}>\n            <div className=\"heading-and-close\">\n              <h1>Edit a plant item</h1>\n              <IconButton onClick={closeEditPlantModal}>\n                <CloseIcon />\n              </IconButton>\n            </div>\n            <section>\n              <div className=\"plant-label-and-input\">\n                <label htmlFor=\"name\" className=\"label\">\n                  Plant Name\n                </label>\n                <input\n                  id=\"name\"\n                  aria-invalid={errors.name ? 'true' : 'false'}\n                  {...register('name', {\n                    required: 'This is required.',\n                    value: plantDetails?.name,\n                  })}\n                  type=\"text\"\n                />\n              </div>\n              <div className=\"error-message-container plant\">\n                <p\n                  className={\n                    errors.name\n                      ? 'error-message plant-form-error'\n                      : 'error-message-hidden error-message plant-form-error'\n                  }\n                  role=\"alert\"\n                >\n                  {errors.name && errors.name.message}\n                </p>\n              </div>\n\n              <div className=\"plant-label-and-input\">\n                <label htmlFor=\"price\" className=\"label\">\n                  Price\n                </label>\n                <input\n                  id=\"price\"\n                  aria-invalid={errors.passward ? 'true' : 'false'}\n                  {...register('price', {\n                    required: 'This is required.',\n                    value: plantDetails?.price,\n                  })}\n                  type=\"text\"\n                  placeholder=\"Price\"\n                />\n              </div>\n              <div className=\"error-message-container\">\n                <p\n                  className={\n                    errors.price\n                      ? 'error-message plant-form-error'\n                      : 'error-message-hidden error-message plant-form-error'\n                  }\n                  role=\"alert\"\n                >\n                  {errors.price && errors.price.message}\n                </p>\n              </div>\n\n              <div className=\"plant-label-and-input\">\n                <label htmlFor=\"countInStock\" className=\"label\">\n                  Count\n                </label>\n                <input\n                  id=\"countInStock\"\n                  {...register('countInStock', {\n                    required: 'This is required.',\n                    value: plantDetails?.countInStock,\n                  })}\n                  type=\"number\"\n                />\n              </div>\n              <div className=\"error-message-container\">\n                <p\n                  className={\n                    errors.price\n                      ? 'error-message plant-form-error'\n                      : 'error-message-hidden error-message plant-form-error'\n                  }\n                  role=\"alert\"\n                >\n                  {errors.countInStock && errors.countInStock.message}\n                </p>\n              </div>\n\n              <div className=\"plant-label-and-image-input\">\n                <label htmlFor=\"image\" className=\"label\">\n                  Plant Image\n                </label>\n                <div className=\"image-edit-input-wrapper\">\n                  {Boolean(plantDetails.image) && (\n                    <input\n                      type=\"text\"\n                      value={plantDetails.image}\n                      className=\"image-input-edit\"\n                    />\n                  )}\n                  <input\n                    id=\"image\"\n                    {...register('image', {\n                      value: plantDetails?.image,\n                    })}\n                    type=\"file\"\n                    onChange={handleFileChange}\n                  />\n                </div>\n              </div>\n\n              <div className=\"plant-label-and-input pot-size-wrapper\">\n                <label htmlFor=\"potSize\" className=\"label\">\n                  Pot Size\n                </label>\n                <input\n                  id=\"potSize\"\n                  {...register('potSize', {\n                    value: plantDetails?.potSize,\n                  })}\n                  type=\"text\"\n                  placeholder=\"Pot Size\"\n                />\n              </div>\n\n              <div className=\"plant-label-and-input input-margin-top\">\n                <label htmlFor=\"description\" className=\"label\">\n                  Description\n                </label>\n                <textarea\n                  id=\"description\"\n                  {...register('description', {\n                    value: plantDetails?.description,\n                  })}\n                  placeholder=\"Description\"\n                  className=\"textarea\"\n                />\n              </div>\n\n              <div className=\"plant-label-and-input input-margin-top\">\n                <label htmlFor=\"potSize\" className=\"label\">\n                  Plant Size\n                </label>\n                <input\n                  id=\"filterByPlantSize\"\n                  {...register('filterByPlantSize', {\n                    value: plantDetails?.filterByPlantSize,\n                  })}\n                  type=\"text\"\n                  placeholder=\"Plant size\"\n                />\n              </div>\n\n              <div className=\"plant-label-and-input input-margin-top\">\n                <label htmlFor=\"ligtReq\" className=\"label\">\n                  Light\n                </label>\n                <input\n                  id=\"filterByLightRequirements\"\n                  {...register('filterByLightRequirements', {\n                    value: plantDetails?.filterByLightRequirements,\n                  })}\n                  type=\"text\"\n                  placeholder=\"Light requirements\"\n                />\n              </div>\n\n              <div className=\"plant-label-and-input input-margin-top\">\n                <label htmlFor=\"light\" className=\"label\">\n                  Light\n                </label>\n                <textarea\n                  id=\"light\"\n                  {...register('light', {\n                    value: plantDetails?.light,\n                  })}\n                  placeholder=\"Light description\"\n                  className=\"textarea\"\n                />\n              </div>\n\n              <div className=\"plant-label-and-input input-margin-top\">\n                <label htmlFor=\"water\" className=\"label\">\n                  Water\n                </label>\n                <textarea\n                  id=\"water\"\n                  {...register('water', {\n                    value: plantDetails?.water,\n                  })}\n                  placeholder=\"Water description\"\n                  className=\"textarea\"\n                />\n              </div>\n\n              <div className=\"plant-label-and-input input-margin-top\">\n                <label htmlFor=\"tips\" className=\"label\">\n                  Tips\n                </label>\n                <textarea\n                  id=\"tips\"\n                  {...register('tips', {\n                    value: plantDetails?.tips,\n                  })}\n                  placeholder=\"Tips description\"\n                  className=\"textarea\"\n                />\n              </div>\n              <div className=\"plant-label-and-input input-margin-top\">\n                <label htmlFor=\"toxicity\" className=\"label\">\n                  Toxicity\n                </label>\n                <textarea\n                  id=\"toxicity\"\n                  {...register('toxicity', {\n                    value: plantDetails?.toxicity,\n                  })}\n                  placeholder=\"Toxicity description\"\n                  className=\"textarea\"\n                />\n              </div>\n            </section>\n\n            <div className=\"create-plant-butttons-wrapper\">\n              <div className=\"create-plant-buttons\">\n                {editFailMessage && (\n                  <p className=\"incorrect-details\">{editFailMessage}</p>\n                )}\n                <Button\n                  onClick={closeEditPlantModal}\n                  variant=\"contained\"\n                  color=\"inherit\"\n                >\n                  <Typography variant=\"button\"> Cancel</Typography>\n                </Button>\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  className=\"create-plant-submit-button\"\n                  type=\"submit\"\n                >\n                  <Typography variant=\"button\"> Edit</Typography>\n                </Button>\n              </div>\n            </div>\n          </form>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default EditPlantForm;\n","import axios from 'axios';\nimport { CreateOrEditPlantData } from '../types';\nimport { getToken } from '../utils';\n\nconst updatePlant = (data: CreateOrEditPlantData, id: string) => {\n  const config = {\n    headers: {\n      Authorization: getToken(),\n      'Content-type': 'application/json',\n    },\n  };\n\n  return axios\n    .put(`http://127.0.0.1:8000/api/plants/update/${id}`, data, config)\n    .then((response) => response.data);\n};\n\nexport default updatePlant;\n","import { getToken } from '../utils';\nimport axios from 'axios';\nimport { Plant } from '../types';\n\nconst postPlantImage = async (formData: FormData): Promise<Plant> => {\n  const config = {\n    headers: {\n      'Content-Type': 'multipart/form-data',\n      Authorization: getToken(),\n    },\n  };\n  const response = await axios.post(\n    `http://127.0.0.1:8000/api/plants/upload`,\n    formData,\n    config\n  );\n  return response.data;\n};\n\nexport default postPlantImage;\n","import * as React from 'react';\nimport { usePlants } from '../../hooks/usePlants';\nimport Loading from '../../components/Loading/Loading';\nimport Error from '../../components/Error/Error';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport AddOutlinedIcon from '@mui/icons-material/AddOutlined';\nimport { Link } from 'react-router-dom';\nimport KeyboardBackspaceOutlinedIcon from '@mui/icons-material/KeyboardBackspaceOutlined';\nimport './AdminPlantListPage.css';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport { IconButton } from '@mui/material';\nimport ModeEditOutlineIcon from '@mui/icons-material/ModeEditOutline';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport Modal from 'react-modal';\nimport DeleteConfirmation from '../../components/DeleteConfirmation/DeleteConfirmation';\nimport { useDeletePlant } from '../../hooks/useDeletePlant';\nimport { useQueryClient } from 'react-query';\nimport CreatePlantForm from '../../components/CreatePlantForm/CreatePlantForm';\nimport { useCreatePlant } from '../../hooks/useCreatePlant';\nimport { CreateOrEditPlantData, Plant } from '../../types';\nimport { AxiosError } from 'axios';\nimport EditPlantForm from '../../components/EditPlantForm/EditPlantForm';\nimport { useUpdatePlant } from '../../hooks/useUpdatePlant';\nimport { Grid } from '@mui/material';\nimport usePlantImageUpload from '../../hooks/usePlantImageUpload';\nimport Snackbar from '@mui/material/Snackbar';\nimport CustomSnackbar from '../../components/CustomSnackbar/CustomSnackbar';\n\nconst AdminPlantList = () => {\n  const [createPlantModalIsOpen, setCreatePlantModalIsOpen] =\n    React.useState(false);\n  const [editPlantModalIsOpen, setEditPlantModalIsOpen] = React.useState(false);\n  const [plantIdToEdit, setPlantIdToEdit] = React.useState('');\n  const [deleteModalIsOpen, setDeleteModalIsOpen] = React.useState(false);\n  const [deleteId, setDeleteId] = React.useState('');\n  const [createFailMessage, setCreateFailMessage] = React.useState('');\n  const [editFailMessage, setEditFailMessage] = React.useState('');\n  const [fileToUpload, setFileToUpload] = React.useState<FormData | null>(null);\n\n  const [openCreatePlantSuccessSnackbar, setOpenCreatePlantSuccessSnackbar] =\n    React.useState(false);\n  const [openEditPlantSuccessSnackbar, setOpenEditPlantSuccessSnackbar] =\n    React.useState(false);\n  const [openDeletePlantSuccessSnackbar, setOpenDeletePlantSuccessSnackbar] =\n    React.useState(false);\n  const [openDeletePlantFailSnackbar, setOpenDeletePlantFailSnackbar] =\n    React.useState(false);\n\n  const handleCreatePlantCloseSnackbar = (\n    event?: React.SyntheticEvent | Event,\n    reason?: string\n  ) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpenCreatePlantSuccessSnackbar(false);\n  };\n\n  const handleEditPlantCloseSnackbar = (\n    event?: React.SyntheticEvent | Event,\n    reason?: string\n  ) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpenEditPlantSuccessSnackbar(false);\n  };\n\n  const handleDeletePlantCloseSnackbar = (\n    event?: React.SyntheticEvent | Event,\n    reason?: string\n  ) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpenDeletePlantSuccessSnackbar(false);\n  };\n\n  const handleDeletePlantFailCloseSnackbar = (\n    event?: React.SyntheticEvent | Event,\n    reason?: string\n  ) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpenDeletePlantFailSnackbar(false);\n  };\n\n  const { plants, plantsLoading, plantsError } = usePlants();\n\n  const openCreatePlantModal = () => {\n    setCreatePlantModalIsOpen(true);\n  };\n\n  const closeCreatePlantModal = () => {\n    setCreatePlantModalIsOpen(false);\n  };\n\n  const openEditPlantModal = (id: number) => {\n    setEditPlantModalIsOpen(true);\n    setPlantIdToEdit(id.toString());\n  };\n\n  const closeEditPlantModal = () => {\n    setEditPlantModalIsOpen(false);\n  };\n\n  const openDeleteModal = (id: number) => {\n    setDeleteModalIsOpen(true);\n    setDeleteId(id.toString());\n  };\n\n  const closeDeleteModal = () => {\n    setDeleteModalIsOpen(false);\n  };\n\n  const queryClient = useQueryClient();\n\n  const onPlantImageUploadSuccess = (data: Plant) => {\n    queryClient.invalidateQueries(['getPlant', data.id], { exact: true });\n  };\n\n  const { uploadPlantImage } = usePlantImageUpload({\n    onSuccess: onPlantImageUploadSuccess,\n  });\n\n  const uploadFile = (plantId: string) => {\n    if (fileToUpload) {\n      fileToUpload.append('plant_id', plantId);\n      uploadPlantImage(fileToUpload);\n    }\n  };\n\n  const createPlantSuccess = (data: Plant) => {\n    setCreatePlantModalIsOpen(false);\n    setOpenCreatePlantSuccessSnackbar(true);\n    queryClient.invalidateQueries(['getPlants'], { exact: true });\n    uploadFile(data.id.toString());\n  };\n\n  const createPlantFail = (error: AxiosError) => {\n    if (error?.response?.status === 401) {\n      setCreateFailMessage(error?.response?.data.detail);\n    } else {\n      setCreateFailMessage('Something went wrong, please try again.');\n    }\n  };\n\n  const { createPlant } = useCreatePlant(createPlantSuccess, createPlantFail);\n\n  const editPlantSuccess = () => {\n    setEditPlantModalIsOpen(false);\n    setOpenEditPlantSuccessSnackbar(true);\n    queryClient.invalidateQueries(['getPlants'], { exact: true });\n    queryClient.invalidateQueries(['getPlant', plantIdToEdit], { exact: true });\n    uploadFile(plantIdToEdit);\n  };\n\n  const editPlantFail = (error: AxiosError) => {\n    if (error?.response?.status === 401) {\n      setEditFailMessage(error?.response?.data.detail);\n    } else {\n      setEditFailMessage('Something went wrong, please try again.');\n    }\n  };\n\n  const { updatePlantItem } = useUpdatePlant(editPlantSuccess, editPlantFail);\n\n  const deletePlantSuccess = () => {\n    setOpenDeletePlantSuccessSnackbar(true);\n    queryClient.invalidateQueries(['getPlants'], { exact: true });\n  };\n\n  const deletePlantFail = () => {\n    setOpenDeletePlantFailSnackbar(true);\n  };\n\n  const { deletePlantItem } = useDeletePlant(\n    deletePlantSuccess,\n    deletePlantFail\n  );\n\n  const handleCreatePlant = (data: CreateOrEditPlantData) => {\n    createPlant(data);\n  };\n\n  const handleEditPlant = (formData: CreateOrEditPlantData) => {\n    updatePlantItem({ formData, id: plantIdToEdit });\n  };\n\n  const handleDeletePlant = (id: string) => {\n    deletePlantItem(id);\n    setDeleteModalIsOpen(false);\n  };\n\n  if (plantsLoading) {\n    return <Loading />;\n  }\n\n  if (!plantsLoading && plantsError) {\n    return <Error />;\n  }\n\n  if (!plants) {\n    return null;\n  }\n\n  const rows = plants.map((plant) => {\n    return {\n      id: plant.id,\n      name: plant.name,\n      potSize: plant.potSize,\n      price: `€${plant.price}`,\n    };\n  });\n\n  return (\n    <Grid container direction=\"column\" sx={{ px: 8, py: 4 }}>\n      <section className=\"admin-plant-list-page-wrapper\">\n        <div className=\"admin-plant-list-page\">\n          <Link to=\"/users/profile\" className=\"go-back-link\">\n            <div>\n              <KeyboardBackspaceOutlinedIcon fontSize=\"small\" />\n            </div>\n            <p>go back</p>\n          </Link>\n          <div className=\"heading-and-create-button\">\n            <h1>Manage plants</h1>\n            <Button\n              variant=\"contained\"\n              endIcon={<AddOutlinedIcon />}\n              onClick={() => openCreatePlantModal()}\n            >\n              <Typography variant=\"button\">Create</Typography>\n            </Button>\n          </div>\n          <div>\n            <Snackbar\n              open={openCreatePlantSuccessSnackbar}\n              autoHideDuration={6000}\n              onClose={handleCreatePlantCloseSnackbar}\n            >\n              <CustomSnackbar\n                onClose={handleCreatePlantCloseSnackbar}\n                severity=\"success\"\n              >\n                Plant item was successfully added.\n              </CustomSnackbar>\n            </Snackbar>\n          </div>\n\n          <div>\n            <Snackbar\n              open={openEditPlantSuccessSnackbar}\n              autoHideDuration={6000}\n              onClose={handleEditPlantCloseSnackbar}\n            >\n              <CustomSnackbar\n                onClose={handleEditPlantCloseSnackbar}\n                severity=\"success\"\n              >\n                Plant item was successfully updated.\n              </CustomSnackbar>\n            </Snackbar>\n          </div>\n\n          <div>\n            <Snackbar\n              open={openDeletePlantSuccessSnackbar}\n              autoHideDuration={6000}\n              onClose={handleDeletePlantCloseSnackbar}\n            >\n              <CustomSnackbar\n                onClose={handleDeletePlantCloseSnackbar}\n                severity=\"success\"\n              >\n                Plant item was successfully deleted.\n              </CustomSnackbar>\n            </Snackbar>\n          </div>\n\n          <div>\n            <Snackbar\n              open={openDeletePlantFailSnackbar}\n              autoHideDuration={6000}\n              onClose={handleDeletePlantFailCloseSnackbar}\n            >\n              <CustomSnackbar\n                onClose={handleDeletePlantFailCloseSnackbar}\n                severity=\"error\"\n              >\n                Something went wrong, please try again.\n              </CustomSnackbar>\n            </Snackbar>\n          </div>\n\n          <TableContainer component={Paper}>\n            <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n              <TableHead>\n                <TableRow>\n                  <TableCell>ID</TableCell>\n                  <TableCell>Plant Name</TableCell>\n                  <TableCell>Pot Size</TableCell>\n                  <TableCell>Price</TableCell>\n                  <TableCell>Edit</TableCell>\n                  <TableCell>Delete</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {rows.map((row) => (\n                  <TableRow\n                    key={row.id}\n                    sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n                  >\n                    <TableCell>{row.id}</TableCell>\n                    <TableCell component=\"th\" scope=\"row\">\n                      <Link\n                        to={`/plants/${row.id}`}\n                        className=\"plant-name-link\"\n                      >\n                        {' '}\n                        {row.name}\n                      </Link>\n                    </TableCell>\n                    <TableCell>{row.potSize}</TableCell>\n                    <TableCell>{row.price}</TableCell>\n                    <TableCell>\n                      <IconButton onClick={() => openEditPlantModal(row.id)}>\n                        <ModeEditOutlineIcon />\n                      </IconButton>\n                    </TableCell>\n                    <TableCell>\n                      <IconButton onClick={() => openDeleteModal(row.id)}>\n                        <DeleteIcon />\n                      </IconButton>\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </div>\n      </section>\n      <Modal\n        isOpen={createPlantModalIsOpen}\n        onRequestClose={closeCreatePlantModal}\n        contentLabel=\"Create a plant item\"\n        ariaHideApp={false}\n        className=\"Modal-Create-Plant\"\n        overlayClassName=\"Overlay-Create-Plant\"\n      >\n        <CreatePlantForm\n          handleCreatePlant={handleCreatePlant}\n          closeCreatePlantModal={closeCreatePlantModal}\n          createFailMessage={createFailMessage}\n          onFileChange={setFileToUpload}\n        />\n      </Modal>\n      <Modal\n        isOpen={editPlantModalIsOpen}\n        onRequestClose={closeEditPlantModal}\n        contentLabel=\"Edit a plant item\"\n        ariaHideApp={false}\n        className=\"Modal-Edit-Plant\"\n        overlayClassName=\"Overlay-Edit-Plant\"\n      >\n        <EditPlantForm\n          handleEditPlant={handleEditPlant}\n          closeEditPlantModal={closeEditPlantModal}\n          plantIdToEdit={plantIdToEdit}\n          editFailMessage={editFailMessage}\n          onFileChange={setFileToUpload}\n        />\n      </Modal>\n      <Modal\n        isOpen={deleteModalIsOpen}\n        onRequestClose={closeDeleteModal}\n        contentLabel=\"Delete Confirmation\"\n        ariaHideApp={false}\n        className=\"Modal-Delete\"\n        overlayClassName=\"Overlay-Delete\"\n      >\n        <DeleteConfirmation\n          handleDeletePlant={handleDeletePlant}\n          deleteId={deleteId}\n          closeDeleteModal={closeDeleteModal}\n        />\n      </Modal>\n    </Grid>\n  );\n};\n\nexport default AdminPlantList;\n","import { Plant } from '../types';\nimport { useMutation, UseMutationOptions } from 'react-query';\nimport postPlantImage from '../api/postPlantImage';\nimport { AxiosError } from 'axios';\n\nexport default function usePlantImageUpload(\n  mutationOptions: Partial<UseMutationOptions<Plant, AxiosError, FormData>> = {}\n) {\n  const {\n    mutate: uploadPlantImage,\n    isLoading: plantImageUploadLoading,\n    isError: plantImageUploadError,\n  } = useMutation<Plant, AxiosError, FormData>(postPlantImage, mutationOptions);\n\n  return {\n    uploadPlantImage,\n    plantImageUploadLoading,\n    plantImageUploadError,\n  };\n}\n","import { AxiosError } from 'axios';\nimport { useMutation } from 'react-query';\nimport postCreatePlant from '../api/postCreatePlant';\nimport { CreateOrEditPlantData, Plant } from '../types';\n\nexport const useCreatePlant = (\n  createPlantSuccess: (data: Plant) => void,\n  createPlantFail: (error: AxiosError) => void\n) => {\n  const {\n    mutate: createPlant,\n    isLoading: createPlantLoading,\n    isError: createPlantError,\n  } = useMutation(\n    (formData: CreateOrEditPlantData) =>\n      postCreatePlant(formData).then((data) => data),\n    {\n      onSuccess: (data) => {\n        createPlantSuccess(data);\n      },\n      onError: (error: AxiosError) => {\n        createPlantFail(error);\n      },\n    }\n  );\n\n  return {\n    createPlant,\n    createPlantLoading,\n    createPlantError,\n  };\n};\n","import { AxiosError } from 'axios';\nimport { useMutation } from 'react-query';\nimport updatePlant from '../api/updatePlant';\nimport { CreateOrEditPlantData } from '../types';\n\ntype UpdatePlantArgs = {\n  formData: CreateOrEditPlantData;\n  id: string;\n};\n\nexport const useUpdatePlant = (\n  editPlantSuccess: () => void,\n  editPlantFail: (error: AxiosError) => void\n) => {\n  const {\n    mutate: updatePlantItem,\n    isLoading: updatePlantItemLoading,\n    isError: updatePlantItemError,\n  } = useMutation<any, AxiosError, UpdatePlantArgs>(\n    ({ formData, id }) => {\n      return updatePlant(formData, id).then((data) => data);\n    },\n    {\n      onSuccess: () => {\n        editPlantSuccess();\n      },\n      onError: (error: AxiosError) => {\n        editPlantFail(error);\n      },\n    }\n  );\n  return {\n    updatePlantItem,\n    updatePlantItemLoading,\n    updatePlantItemError,\n  };\n};\n\n// updatePlantItem({ formData, id})\n","import { useMutation } from 'react-query';\nimport deletePlant from '../api/deletePlant';\n\nexport const useDeletePlant = (\n  deletePlantSuccess: () => void,\n  deletePlantFail: () => void\n) => {\n  const {\n    mutate: deletePlantItem,\n    isLoading: deletePlantItemLoading,\n    isError: deletePlantItemError,\n  } = useMutation((id: string) => deletePlant(id).then((data) => data), {\n    onSuccess: () => {\n      deletePlantSuccess();\n    },\n    onError: () => {\n      deletePlantFail();\n    },\n  });\n\n  return {\n    deletePlantItem,\n    deletePlantItemLoading,\n    deletePlantItemError,\n  };\n};\n","import * as React from 'react';\nimport { Outlet, useLocation } from 'react-router-dom';\nimport { Grid, Stepper, Step, StepLabel } from '@mui/material';\n\nconst steps = [\n  { id: 0, url: 'shipping', label: 'Shipping' },\n  { id: 1, url: 'place-order', label: 'Place Order' },\n];\n\nconst CheckoutPage = () => {\n  const { pathname } = useLocation();\n  const activeStep = steps.find(({ url }) => pathname.includes(url))?.id ?? 0;\n\n  return (\n    <Grid container direction=\"column\" sx={{ py: 4, px: 8 }}>\n      <Grid item xs={12}>\n        <Stepper activeStep={activeStep} alternativeLabel>\n          {steps.map(({ url, label }) => (\n            <Step key={url}>\n              <StepLabel>{label}</StepLabel>\n            </Step>\n          ))}\n        </Stepper>\n      </Grid>\n      <Outlet />\n    </Grid>\n  );\n};\n\nexport default CheckoutPage;\n","import { Button, Grid, TextField } from '@mui/material';\nimport { Controller, useForm } from 'react-hook-form';\nimport { useNavigate } from 'react-router-dom';\nimport { ShippingAddress } from '../../types';\n\nexport type ShippingFormValues = Pick<\n  ShippingAddress,\n  'address' | 'city' | 'postalCode' | 'country'\n>;\n\nconst formDefaultValues: ShippingFormValues = {\n  address: '',\n  city: '',\n  postalCode: '',\n  country: '',\n};\n\nconst CheckoutShipping = () => {\n  const navigate = useNavigate();\n  const { control, handleSubmit } = useForm<ShippingFormValues>({\n    defaultValues: formDefaultValues,\n  });\n\n  const onSubmit = (values: ShippingFormValues) => {\n    localStorage.setItem('checkout.shipping', JSON.stringify(values));\n    navigate('/checkout/place-order');\n  };\n\n  return (\n    <Grid container direction=\"column\" spacing={3}>\n      <Grid item>\n        <h1>Shipping</h1>\n      </Grid>\n      <Grid item>\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <Grid container direction=\"column\" spacing={2}>\n            <Grid item>\n              <Controller\n                control={control}\n                name=\"address\"\n                rules={{ required: 'Address is required' }}\n                render={({ field, fieldState }) => (\n                  <TextField\n                    fullWidth\n                    {...field}\n                    error={Boolean(fieldState.error)}\n                    helperText={fieldState.error?.message}\n                    label=\"Address\"\n                  />\n                )}\n              />\n            </Grid>\n            <Grid item>\n              <Controller\n                control={control}\n                name=\"city\"\n                rules={{ required: 'City is required' }}\n                render={({ field, fieldState }) => (\n                  <TextField\n                    fullWidth\n                    {...field}\n                    error={Boolean(fieldState.error)}\n                    helperText={fieldState.error?.message}\n                    label=\"City\"\n                  />\n                )}\n              />\n            </Grid>\n            <Grid item>\n              <Controller\n                control={control}\n                name=\"postalCode\"\n                rules={{ required: 'Postal code is required' }}\n                render={({ field, fieldState }) => (\n                  <TextField\n                    fullWidth\n                    {...field}\n                    error={Boolean(fieldState.error)}\n                    helperText={fieldState.error?.message}\n                    label=\"Postal code\"\n                  />\n                )}\n              />\n            </Grid>\n            <Grid item>\n              <Controller\n                control={control}\n                name=\"country\"\n                rules={{ required: 'Country is required' }}\n                render={({ field, fieldState }) => (\n                  <TextField\n                    fullWidth\n                    {...field}\n                    error={Boolean(fieldState.error)}\n                    helperText={fieldState.error?.message}\n                    label=\"Country\"\n                  />\n                )}\n              />\n            </Grid>\n            <Grid item>\n              <Button variant=\"contained\" size=\"large\" type=\"submit\">\n                Continue\n              </Button>\n            </Grid>\n          </Grid>\n        </form>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default CheckoutShipping;\n","import { getToken } from '../utils';\nimport axios from 'axios';\nimport { PostOrderData } from '../types';\n\nconst postOrder = (data: PostOrderData) => {\n  const config = {\n    headers: {\n      Authorization: getToken(),\n    },\n  };\n  return axios\n    .post('http://127.0.0.1:8000/api/orders/add/', data, config)\n    .then((response) => response.data);\n};\n\nexport default postOrder;\n","import * as React from 'react';\nimport {\n  Button,\n  Divider,\n  Grid,\n  GridDirection,\n  Typography,\n  useMediaQuery,\n  useTheme,\n} from '@mui/material';\nimport { Box } from '@mui/system';\nimport { ResponsiveStyleValue } from '@mui/system/styleFunctionSx';\nimport Alert from '@mui/material/Alert';\nimport { Plant } from '../../types';\nimport { ShippingFormValues } from './CheckoutShipping';\nimport { useNavigate } from 'react-router-dom';\nimport { usePlants } from '../../hooks/usePlants';\nimport { useCreateOrder } from '../../hooks/useCreateOrder';\nimport Loading from '../../components/Loading/Loading';\nimport Error from '../../components/Error/Error';\n\nconst SHIPPING_PRICE = 5;\nconst TAX_PRICE = 0.135;\n\ntype CheckoutPlaceOrderProps = {\n  emptyCart: () => void;\n};\n\nconst CheckoutPlaceOrder = ({ emptyCart }: CheckoutPlaceOrderProps) => {\n  const theme = useTheme();\n  const navigate = useNavigate();\n  const isMobile = useMediaQuery(theme.breakpoints.down('lg'));\n  const shippingInfo = useGetShippingInfo();\n  const { plants, plantsLoading, plantsError } = useGetPlantsInCart();\n\n  const createOrderSuccess = (id: number) => {\n    emptyCart();\n    navigate(`/order/${id}`);\n  };\n\n  const { createOrder, createOrderLoading, createOrderError } =\n    useCreateOrder(createOrderSuccess);\n\n  const containerDirection: ResponsiveStyleValue<GridDirection> = isMobile\n    ? {\n        direction: 'column-reverse',\n      }\n    : { direction: 'row' };\n\n  if (!shippingInfo) {\n    navigate('/checkout/shipping');\n    return null;\n  }\n\n  const { address, city, postalCode, country } = shippingInfo;\n\n  if (plantsLoading) {\n    return <Loading />;\n  }\n\n  if (!plantsLoading && plantsError) {\n    return <Error />;\n  }\n  const itemsTotal = plants.reduce(\n    (sum, curr) => sum + +curr.price * curr.qty,\n    0\n  );\n  const taxPrice = itemsTotal * TAX_PRICE;\n  const totalPrice = itemsTotal + taxPrice + SHIPPING_PRICE;\n\n  const handleCreateOrder = () => {\n    createOrder({\n      totalPrice: totalPrice.toString(),\n      taxPrice: taxPrice.toString(),\n      shippingPrice: SHIPPING_PRICE.toString(),\n      shippingAddress: shippingInfo,\n      paymentMethod: 'stripe',\n      orderItems: plants.map(({ id, price, qty }) => ({\n        qty,\n        plantId: id,\n        price: +price,\n      })),\n    });\n  };\n\n  return (\n    <Grid container spacing={8} sx={{ p: 4 }} {...containerDirection}>\n      <Grid item xs={12} lg={8}>\n        <Typography variant=\"h5\" gutterBottom component=\"h5\">\n          Shipping\n        </Typography>\n        <Typography variant=\"body1\" gutterBottom>\n          {address}, {city}, {postalCode}, {country}\n        </Typography>\n        <Divider sx={{ my: 3 }} />\n        <Typography variant=\"h5\" gutterBottom component=\"h5\">\n          Payment method\n        </Typography>\n        <Typography variant=\"body1\" gutterBottom>\n          stripe\n        </Typography>\n        <Divider sx={{ my: 3 }} />\n        <Box>\n          <Typography variant=\"h5\" gutterBottom component=\"h5\">\n            Order items\n          </Typography>\n          {plants.map(({ name, qty, price }) => (\n            <Box\n              sx={{ display: 'flex', justifyContent: 'space-between', pt: 2 }}\n              key={name}\n            >\n              <Box component=\"span\">{name}</Box>\n              <Box component=\"span\">\n                {qty} x € {price}\n              </Box>\n            </Box>\n          ))}\n        </Box>\n      </Grid>\n      <Grid item xs={12} lg={4}>\n        <Box sx={{ border: 1, borderRadius: 1, color: 'text.primary' }}>\n          <Typography\n            variant=\"h5\"\n            component=\"h5\"\n            sx={{ p: 1, color: 'text.primary' }}\n          >\n            Order summary\n          </Typography>\n          <Typography\n            variant=\"body1\"\n            sx={{\n              display: 'flex',\n              justifyContent: 'space-between',\n              borderTop: 1,\n              p: 1,\n              color: 'text.primary',\n            }}\n          >\n            <Box component=\"span\">Items:</Box>\n            <Box component=\"span\">{itemsTotal.toFixed(2)}</Box>\n          </Typography>\n          <Typography\n            variant=\"body1\"\n            sx={{\n              display: 'flex',\n              justifyContent: 'space-between',\n              borderTop: 1,\n              p: 1,\n              color: 'text.primary',\n            }}\n          >\n            <Box component=\"span\">Tax:</Box>\n            <Box component=\"span\">{taxPrice.toFixed(2)}</Box>\n          </Typography>\n          <Typography\n            variant=\"body1\"\n            sx={{\n              display: 'flex',\n              justifyContent: 'space-between',\n              borderTop: 1,\n              p: 1,\n              color: 'text.primary',\n            }}\n          >\n            <Box component=\"span\">Shipping:</Box>\n            <Box component=\"span\">{SHIPPING_PRICE.toFixed(2)}</Box>\n          </Typography>\n          <Typography\n            variant=\"body1\"\n            sx={{\n              display: 'flex',\n              justifyContent: 'space-between',\n              borderTop: 1,\n              p: 1,\n              color: 'text.primary',\n            }}\n          >\n            <Box component=\"span\">Total:</Box>\n            <Box component=\"span\">{totalPrice.toFixed(2)}</Box>\n          </Typography>\n        </Box>\n        <Box sx={{ pt: 2 }}>\n          <Button\n            variant=\"contained\"\n            fullWidth\n            size=\"large\"\n            disabled={createOrderLoading}\n            onClick={handleCreateOrder}\n          >\n            Place order\n          </Button>\n          {createOrderError && (\n            <Alert sx={{ width: '90%', mt: 2 }} severity=\"error\">\n              Something went wrong, please try again.\n            </Alert>\n          )}\n        </Box>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default CheckoutPlaceOrder;\n\nfunction useGetShippingInfo() {\n  const shippingInfo = React.useMemo(() => {\n    const storedShippingInfo = localStorage.getItem('checkout.shipping');\n    if (!storedShippingInfo) return null;\n    return JSON.parse(storedShippingInfo) as ShippingFormValues;\n  }, []);\n\n  return shippingInfo;\n}\n\ntype PlantWithQuantity = Plant & { qty: number };\n\nfunction useGetPlantsInCart() {\n  const cartPlants = React.useMemo(() => {\n    const storedCartPlants = localStorage.getItem('cartItems');\n    if (!storedCartPlants) return null;\n    return JSON.parse(storedCartPlants) as {\n      plantId: number;\n      quantity: number;\n    }[];\n  }, []);\n\n  const { plants, plantsLoading, plantsError } = usePlants({\n    enabled: Boolean(cartPlants),\n  });\n\n  const plantsWithQuantity =\n    cartPlants && plants\n      ? //@ts-ignore\n        plants.reduce((acc, currentPlant) => {\n          const plantInCart = cartPlants.find(\n            ({ plantId }) => plantId === currentPlant.id\n          );\n          if (!plantInCart) {\n            return acc;\n          }\n          return [...acc, { ...currentPlant, qty: plantInCart.quantity }];\n        }, [])\n      : [];\n\n  return {\n    plants: plantsWithQuantity as PlantWithQuantity[],\n    plantsLoading,\n    plantsError,\n  };\n}\n","import { useMutation } from 'react-query';\nimport postOrder from '../api/postOrder';\nimport { PostOrderData, Order } from '../types';\n\nexport const useCreateOrder = (createOrderSuccess: (id: number) => void) => {\n  const {\n    mutate: createOrder,\n    isLoading: createOrderLoading,\n    isError: createOrderError,\n  } = useMutation(\n    (orderData: PostOrderData) => postOrder(orderData).then((data) => data),\n    {\n      onSuccess: (data: Order) => {\n        createOrderSuccess(data.id);\n      },\n    }\n  );\n\n  return {\n    createOrder,\n    createOrderLoading,\n    createOrderError,\n  };\n};\n","import axios from 'axios';\nimport { getToken } from '../utils';\n\nconst config = {\n  headers: {\n    Authorization: getToken(),\n  },\n};\n\nconst getOrder = (id?: string) => {\n  return axios\n    .get(`http://127.0.0.1:8000/api/orders/${id}`, config)\n    .then((response) => response.data);\n};\n\nexport default getOrder;\n","import { useQuery } from 'react-query';\nimport getOrder from '../api/getOrder';\nimport { Order } from '../types';\n\nexport const useOrder = (id: string) => {\n  const {\n    data: orderDetails,\n    isLoading: orderDetailsLoading,\n    isError: orderDetailsError,\n  } = useQuery<Order>({\n    queryKey: ['getOrder', id],\n    queryFn: () => getOrder(id).then((data) => data),\n  });\n\n  return {\n    orderDetails,\n    orderDetailsLoading,\n    orderDetailsError,\n  };\n};\n","import {\n  Alert,\n  Button,\n  Divider,\n  Grid,\n  GridDirection,\n  Typography,\n} from '@mui/material';\nimport { Box } from '@mui/system';\nimport { Link as RouterLink, useParams, useLocation } from 'react-router-dom';\nimport { useOrder } from '../../hooks/useOrder';\nimport { useTheme } from '@mui/material/styles';\nimport useMediaQuery from '@mui/material/useMediaQuery';\nimport { ResponsiveStyleValue } from '@mui/system/styleFunctionSx';\nimport Loading from '../../components/Loading/Loading';\nimport Error from '../../components/Error/Error';\n\nconst OrderPage = () => {\n  const { id } = useParams();\n  const { pathname } = useLocation();\n  const theme = useTheme();\n\n  const { orderDetails, orderDetailsLoading, orderDetailsError } = useOrder(\n    id!\n  );\n\n  const isMobile = useMediaQuery(theme.breakpoints.down('lg'));\n\n  if (orderDetailsLoading) {\n    return <Loading />;\n  }\n\n  if (orderDetailsError) {\n    return <Error />;\n  }\n\n  const {\n    shippingAddress: { address, city, postalCode, country },\n    paymentMethod,\n    orderItems,\n    taxPrice,\n    shippingPrice,\n    totalPrice,\n    isDelivered,\n    deliveredAt,\n    isPaid,\n    paidAt,\n  } = orderDetails!;\n\n  const itemsTotal = orderItems.reduce(\n    (total, item) => +total + +item.price,\n    0\n  );\n\n  const containerDirection: ResponsiveStyleValue<GridDirection> = isMobile\n    ? {\n        direction: 'column-reverse',\n      }\n    : { direction: 'row' };\n\n  return (\n    <Grid container spacing={8} sx={{ p: 4 }} {...containerDirection}>\n      <Grid item xs={12} lg={8}>\n        <Typography variant=\"h5\" gutterBottom component=\"h5\">\n          Shipping\n        </Typography>\n        <Typography variant=\"body1\" gutterBottom>\n          {address}, {city}, {postalCode}, {country}\n        </Typography>\n        {isDelivered ? (\n          <Alert>Delivered on {deliveredAt}</Alert>\n        ) : (\n          <Alert severity=\"warning\">Not delivered</Alert>\n        )}\n        <Divider sx={{ my: 3 }} />\n        <Typography variant=\"h5\" gutterBottom component=\"h5\">\n          Payment method\n        </Typography>\n        <Typography variant=\"body1\" gutterBottom>\n          {paymentMethod}\n        </Typography>\n        {isPaid && paidAt ? (\n          <Alert>\n            Paid on{' '}\n            {new Date(paidAt).toLocaleDateString(undefined, {\n              year: 'numeric',\n              month: '2-digit',\n              day: '2-digit',\n              weekday: 'long',\n              hour: '2-digit',\n              hour12: false,\n              minute: '2-digit',\n              second: '2-digit',\n            })}\n          </Alert>\n        ) : (\n          <Alert severity=\"warning\">Not paid</Alert>\n        )}\n        <Divider sx={{ my: 3 }} />\n        <Box>\n          <Typography variant=\"h5\" gutterBottom component=\"h5\">\n            Order items\n          </Typography>\n          {orderItems.map(({ name, qty, price }) => (\n            <Box\n              sx={{ display: 'flex', justifyContent: 'space-between', pt: 2 }}\n              key={name}\n            >\n              <Box component=\"span\">{name}</Box>\n              <Box component=\"span\">\n                {qty} x € {price}\n              </Box>\n            </Box>\n          ))}\n        </Box>\n      </Grid>\n      <Grid item xs={12} lg={4}>\n        <Box sx={{ border: 1, borderRadius: 1, color: 'text.primary' }}>\n          <Typography\n            variant=\"h5\"\n            component=\"h5\"\n            sx={{ p: 1, color: 'text.primary' }}\n          >\n            Order summary\n          </Typography>\n          <Typography\n            variant=\"body1\"\n            sx={{\n              display: 'flex',\n              justifyContent: 'space-between',\n              borderTop: 1,\n              p: 1,\n              color: 'text.primary',\n            }}\n          >\n            <Box component=\"span\">Items:</Box>\n            <Box component=\"span\">{itemsTotal.toFixed(2)}</Box>\n          </Typography>\n          <Typography\n            variant=\"body1\"\n            sx={{\n              display: 'flex',\n              justifyContent: 'space-between',\n              borderTop: 1,\n              p: 1,\n              color: 'text.primary',\n            }}\n          >\n            <Box component=\"span\">Tax:</Box>\n            <Box component=\"span\">{taxPrice}</Box>\n          </Typography>\n          <Typography\n            variant=\"body1\"\n            sx={{\n              display: 'flex',\n              justifyContent: 'space-between',\n              borderTop: 1,\n              p: 1,\n              color: 'text.primary',\n            }}\n          >\n            <Box component=\"span\">Shipping:</Box>\n            <Box component=\"span\">{shippingPrice}</Box>\n          </Typography>\n          <Typography\n            variant=\"body1\"\n            sx={{\n              display: 'flex',\n              justifyContent: 'space-between',\n              borderTop: 1,\n              p: 1,\n              color: 'text.primary',\n            }}\n          >\n            <Box component=\"span\">Total:</Box>\n            <Box component=\"span\">{totalPrice}</Box>\n          </Typography>\n        </Box>\n        {!isPaid && (\n          <Box sx={{ pt: 2 }}>\n            <Button\n              variant=\"contained\"\n              fullWidth\n              component={RouterLink}\n              to={`${pathname}/pay`}\n            >\n              Pay now\n            </Button>\n          </Box>\n        )}\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default OrderPage;\n","import React, { useEffect, useState } from 'react';\nimport {\n  PaymentElement,\n  useStripe,\n  useElements,\n} from '@stripe/react-stripe-js';\nimport { useSearchParams } from 'react-router-dom';\nimport { Box } from '@mui/system';\nimport { Button } from '@mui/material';\nimport { LoadingButton } from '@mui/lab';\nimport { Typography } from '@mui/material';\n\ntype PaymentFormProps = {\n  orderId: string;\n};\n\nexport default function PaymentForm({ orderId }: PaymentFormProps) {\n  const stripe = useStripe();\n  const elements = useElements();\n  const [searchParams] = useSearchParams();\n  const [message, setMessage] = useState<string | null | undefined>(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    if (!stripe) {\n      return;\n    }\n\n    const clientSecret = searchParams.get('payment_intent_client_secret');\n\n    if (!clientSecret) {\n      return;\n    }\n\n    stripe.retrievePaymentIntent(clientSecret).then(({ paymentIntent }) => {\n      if (!paymentIntent) {\n        setMessage('Something went wrong.');\n        return;\n      }\n      switch (paymentIntent.status) {\n        case 'succeeded':\n          setMessage('Payment succeeded!');\n          break;\n        case 'processing':\n          setMessage('Your payment is processing.');\n          break;\n        case 'requires_payment_method':\n          setMessage('Your payment was not successful, please try again.');\n          break;\n        default:\n          setMessage('Something went wrong.');\n          break;\n      }\n    });\n  }, [stripe, searchParams]);\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n\n    if (!stripe || !elements) {\n      // Stripe.js has not yet loaded.\n      return;\n    }\n\n    setIsLoading(true);\n\n    const { error } = await stripe.confirmPayment({\n      elements,\n      confirmParams: {\n        return_url: `${window.location.origin}/order/${orderId}/success`,\n      },\n    });\n\n    if (error.type === 'card_error' || error.type === 'validation_error') {\n      setMessage(error.message);\n    } else {\n      setMessage('An unexpected error occurred.');\n    }\n\n    setIsLoading(false);\n  };\n\n  return (\n    <Box\n      sx={{\n        p: 8,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n      }}\n    >\n      <form id=\"payment-form\" onSubmit={handleSubmit}>\n        <PaymentElement id=\"payment-element\" />\n        {isLoading ? (\n          <Box sx={{ pt: 2 }}>\n            <LoadingButton\n              loading\n              variant=\"contained\"\n              disabled\n              loadingPosition=\"end\"\n              fullWidth\n            >\n              Loading\n            </LoadingButton>\n          </Box>\n        ) : (\n          <Box sx={{ pt: 2 }}>\n            <Button\n              // Disable form submission until Stripe.js has loaded.\n              disabled={!stripe || !elements}\n              fullWidth\n              variant=\"contained\"\n              type=\"submit\"\n            >\n              Pay now\n            </Button>\n          </Box>\n        )}\n        {message && (\n          <Typography variant=\"body1\" sx={{ pt: 2 }}>\n            {message}\n          </Typography>\n        )}\n      </form>\n    </Box>\n  );\n}\n","import { getToken } from '../utils';\nimport axios from 'axios';\nimport { PostPaymentIntentData } from '../types';\n\nconst postPaymentIntent = (data: PostPaymentIntentData) => {\n  const config = {\n    headers: {\n      Authorization: getToken(),\n    },\n  };\n  return axios\n    .post(\n      `http://127.0.0.1:8000/api/orders/${data.id}/create-payment-intent/`,\n      data,\n      config\n    )\n    .then((response) => response.data);\n};\n\nexport default postPaymentIntent;\n","import * as React from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { Appearance, loadStripe } from '@stripe/stripe-js';\nimport { Elements } from '@stripe/react-stripe-js';\nimport PaymentForm from '../../components/PaymentForm/PaymentForm';\nimport { useOrder } from '../../hooks/useOrder';\nimport { Order } from '../../types';\nimport { Typography } from '@mui/material';\nimport { Box } from '@mui/system';\nimport { useCreatePaymentIntent } from '../../hooks/useCreatePaymentIntent';\n\nconst stripePromise = loadStripe(process.env.REACT_APP_STRIPE_KEY!);\n\nconst appearance: Appearance = {\n  theme: 'stripe',\n  variables: {\n    colorPrimary: '#1469bd',\n  },\n};\n\nconst OrderPaymentPage = () => {\n  const { id } = useParams();\n  const { orderDetails } = useOrder(id!);\n  useOrderAlreadyPaid(orderDetails);\n  const { createPaymentIntent, createPaymentIntentData } =\n    useCreatePaymentIntent();\n\n  React.useEffect(() => {\n    if (orderDetails) {\n      createPaymentIntent({\n        id: orderDetails.id,\n        totalPrice: +orderDetails.totalPrice,\n      });\n    }\n  }, [createPaymentIntent, id, orderDetails]);\n\n  if (!createPaymentIntentData || !id || !orderDetails) {\n    return null;\n  }\n\n  const options = {\n    clientSecret: createPaymentIntentData.clientSecret,\n    appearance,\n  };\n\n  return (\n    <Box\n      sx={{\n        pt: 4,\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n      }}\n    >\n      <Typography variant=\"h5\">Pay: €{orderDetails.totalPrice}</Typography>\n      <Elements options={options} stripe={stripePromise}>\n        <PaymentForm orderId={id} />\n      </Elements>\n    </Box>\n  );\n};\n\nexport default OrderPaymentPage;\n\nfunction useOrderAlreadyPaid(orderDetails?: Order) {\n  const navigate = useNavigate();\n\n  React.useEffect(() => {\n    if (orderDetails?.isPaid) {\n      navigate(`/order/${orderDetails.id}/success`);\n    }\n  }, [navigate, orderDetails]);\n}\n","import { useMutation } from 'react-query';\nimport postPaymentIntent from '../api/postPaymentIntent';\nimport { PostPaymentIntentData } from '../types';\n\nexport const useCreatePaymentIntent = () => {\n  const { mutate: createPaymentIntent, data: createPaymentIntentData } =\n    useMutation((paymentData: PostPaymentIntentData) =>\n      postPaymentIntent(paymentData).then((data) => data)\n    );\n  return {\n    createPaymentIntent,\n    createPaymentIntentData,\n  };\n};\n","import axios from 'axios';\nimport { UpdateOrderToPaidPayload } from '../types';\nimport { getToken } from '../utils';\n\nconst putOrderToPaid = (data: UpdateOrderToPaidPayload) => {\n  const config = {\n    headers: {\n      Authorization: getToken(),\n    },\n  };\n\n  return axios\n    .put(`http://127.0.0.1:8000/api/orders/${data.orderId}/pay/`, data, config)\n    .then((response) => response.data);\n};\n\nexport default putOrderToPaid;\n","import * as React from 'react';\nimport { Link, useParams, useSearchParams } from 'react-router-dom';\nimport { useOrder } from '../../hooks/useOrder';\nimport { Grid } from '@mui/material';\nimport { useUpdateOrderToPaid } from '../../hooks/useUpdateOrderToPaid';\nimport Loading from '../../components/Loading/Loading';\nimport Alert from '@mui/material/Alert';\nimport AlertTitle from '@mui/material/AlertTitle';\n\nconst OrderPaymentSuccessPage = () => {\n  const { id } = useParams();\n  const [searchParams] = useSearchParams();\n  const { orderDetails, orderDetailsError, orderDetailsLoading } = useOrder(\n    id!\n  );\n\n  const {\n    updateOrderToPaid,\n    updateOrderToPaidError,\n    updateOrderToPaidLoading,\n  } = useUpdateOrderToPaid();\n\n  React.useEffect(() => {\n    const paymentIntentId = searchParams.get('payment_intent');\n    if (paymentIntentId && orderDetails && !orderDetails.isPaid) {\n      updateOrderToPaid({\n        orderId: orderDetails.id,\n        paymentIntentId,\n      });\n    }\n  }, [orderDetails, updateOrderToPaid, searchParams]);\n\n  if (orderDetailsLoading || updateOrderToPaidLoading) {\n    return <Loading />;\n  }\n\n  if (updateOrderToPaidError || orderDetailsError) {\n    // if (true) {\n    return (\n      <Grid container sx={{ p: 4 }}>\n        <Alert severity=\"error\" sx={{ width: '100%' }}>\n          <AlertTitle>Error updating order to paid</AlertTitle>\n        </Alert>\n      </Grid>\n    );\n  }\n\n  return (\n    <Grid container direction=\"column\" sx={{ p: 4 }}>\n      <Alert severity=\"success\">\n        <AlertTitle>Successful payment for order {id}</AlertTitle>\n        See order info{' '}\n        <Link to={`/order/${id}`} style={{ color: 'black' }}>\n          here\n        </Link>\n      </Alert>\n    </Grid>\n  );\n};\n\nexport default OrderPaymentSuccessPage;\n","import { useMutation } from 'react-query';\nimport putOrderToPaid from '../api/putOrderToPaid';\nimport { UpdateOrderToPaidPayload } from '../types';\n\nexport const useUpdateOrderToPaid = () => {\n  const {\n    mutate: updateOrderToPaid,\n    isLoading: updateOrderToPaidLoading,\n    error: updateOrderToPaidError,\n  } = useMutation((payload: UpdateOrderToPaidPayload) =>\n    putOrderToPaid(payload).then((data) => data)\n  );\n  return {\n    updateOrderToPaid,\n    updateOrderToPaidLoading,\n    updateOrderToPaidError,\n  };\n};\n","import { getToken } from '../utils';\nimport axios from 'axios';\n\nconst getMyOrders = async () => {\n  const response = await axios({\n    method: 'get',\n    url: `http://127.0.0.1:8000/api/orders/myorders/`,\n    headers: {\n      Authorization: getToken(),\n    },\n  });\n  return response.data;\n};\n\nexport default getMyOrders;\n","import {\n  Grid,\n  TableContainer,\n  Table,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableBody,\n  Paper,\n} from '@mui/material';\nimport { Link } from 'react-router-dom';\nimport Error from '../../components/Error/Error';\nimport Loading from '../../components/Loading/Loading';\nimport useMyOrders from '../../hooks/useMyOrders';\nimport KeyboardBackspaceOutlinedIcon from '@mui/icons-material/KeyboardBackspaceOutlined';\n\nconst MyOrdersPage = () => {\n  const { myOrders, myOrdersError, myOrdersLoading } = useMyOrders();\n\n  if (myOrdersLoading) {\n    return <Loading />;\n  }\n\n  if (!myOrdersLoading && myOrdersError) {\n    return <Error />;\n  }\n\n  return (\n    <Grid container direction=\"column\" sx={{ px: 8, py: 4 }}>\n      <Link to=\"/users/profile\" className=\"go-back-link\">\n        <div>\n          <KeyboardBackspaceOutlinedIcon fontSize=\"small\" />\n        </div>\n        <p>go back</p>\n      </Link>\n      <Grid item>\n        <h1>My Orders</h1>\n      </Grid>\n      <Grid item>\n        <TableContainer component={Paper}>\n          <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n            <TableHead>\n              <TableRow>\n                <TableCell>Order number</TableCell>\n                <TableCell>Date</TableCell>\n                <TableCell>Total</TableCell>\n                <TableCell>Paid</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {myOrders!.map((order) => (\n                <TableRow\n                  component={Link}\n                  to={`/order/${order.id}`}\n                  key={order.id}\n                  sx={{\n                    '&:last-child td, &:last-child th': { border: 0 },\n                    textDecoration: 'none',\n                  }}\n                >\n                  <TableCell>{order.id}</TableCell>\n                  <TableCell scope=\"row\">\n                    {new Date(order.createdAt).toLocaleDateString(undefined, {\n                      year: 'numeric',\n                      month: '2-digit',\n                      day: '2-digit',\n                      weekday: 'long',\n                      hour: '2-digit',\n                      hour12: false,\n                      minute: '2-digit',\n                      second: '2-digit',\n                    })}\n                  </TableCell>\n                  <TableCell>€ {order.totalPrice}</TableCell>\n                  <TableCell>{order.isPaid ? 'Yes' : 'No'}</TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default MyOrdersPage;\n","import { useQuery } from 'react-query';\nimport getMyOrders from '../api/getMyOrders';\nimport { Order } from '../types';\n\nexport default function useMyOrders() {\n  const {\n    data: myOrders,\n    isLoading: myOrdersLoading,\n    isError: myOrdersError,\n  } = useQuery<Order[]>({\n    queryKey: ['myOrders'],\n    queryFn: () => getMyOrders().then((data) => data),\n  });\n\n  return {\n    myOrders,\n    myOrdersLoading,\n    myOrdersError,\n  };\n}\n","import * as React from 'react';\nimport './App.css';\nimport { HashRouter as Router, Routes, Route } from 'react-router-dom';\nimport { QueryClient, QueryClientProvider } from 'react-query';\nimport Header from './components/Header/Header';\nimport HomePage from './pages/HomePage/HomePage';\nimport PlantsShopPage from './pages/PlantsShopPage/PlantsShopPage';\nimport PlantDetailPage from './pages/PlantDetailPage/PlantDetailPage';\nimport LogInPage from './pages/LogInPage/LogInPage';\nimport RegisterPage from './pages/RegisterPage/RegisterPage';\nimport UserProfile from './pages/UserProfile/UserProfile';\nimport UserProfileUpdate from './pages/UserProfileUpdate/UserProfileUpdate';\nimport Cart from './pages/Cart/Cart';\nimport { CountProvider } from './components/CountContext/CountContext';\nimport parseJwt from './lib/parseJwt';\nimport { useNavigate } from 'react-router-dom';\nimport { RegisterData } from './types';\nimport { useUpdateUserProfile } from './hooks/useUpdateUserProfile';\nimport AdminPlantListPage from './pages/AdminPlantListPage/AdminPlantListPage';\nimport CheckoutPage from './pages/CheckoutPage/CheckoutPage';\nimport CheckoutShipping from './pages/CheckoutPage/CheckoutShipping';\nimport CheckoutPlaceOrder from './pages/CheckoutPage/CheckoutPlaceOrder';\nimport OrderPage from './pages/OrderPage/OrderPage';\nimport OrderPaymentPage from './pages/OrderPaymentPage/OrderPaymentPage';\nimport OrderPaymentSuccessPage from './pages/OrderPaymentSuccessPage/OrderPaymentSuccessPage';\nimport MyOrdersPage from './pages/MyOrdersPage/MyOrdersPage';\n\ntype CartArray = {\n  quantity: number;\n  plantId: number;\n  plantUnitPrice: number;\n}[];\n\nconst queryClient = new QueryClient({\n  defaultOptions: { queries: { refetchOnWindowFocus: false } },\n});\n\nconst App = () => {\n  return (\n    <QueryClientProvider client={queryClient}>\n      <Router>\n        <Main />\n      </Router>\n    </QueryClientProvider>\n  );\n};\n\nfunction Main() {\n  const [cartArray, setCartArray] = React.useState<CartArray>([]);\n  const [hasCartItems, setHasCartItems] = React.useState(false);\n  const [cartArrayFromStorage, setCartArrayFromStorage] =\n    React.useState<CartArray>([]);\n  const [hasTokenInLocalStorage, setHasTokenInLocalStorage] =\n    React.useState(false);\n  const [updateUserProfileErrorMessage, setUpdateUserProfileErrorMessage] =\n    React.useState('');\n  const [isUpdateUserProfileSuccess, setIsUpdateUserProfileSuccess] =\n    React.useState(false);\n\n  const navigate = useNavigate();\n\n  const handleAddToCart = (\n    quantity: number,\n    plantId: number,\n    plantUnitPrice: number\n  ) => {\n    const isInCart = cartArray.find((item) => item.plantId === plantId);\n\n    if (isInCart) {\n      const updatedCart = cartArray.map((cartItem) =>\n        cartItem.plantId === plantId\n          ? { plantId, plantUnitPrice, quantity: quantity + cartItem.quantity }\n          : cartItem\n      );\n      setCartArray(updatedCart);\n      localStorage.setItem('cartItems', JSON.stringify(updatedCart));\n    } else {\n      setCartArray([...cartArray, { quantity, plantId, plantUnitPrice }]);\n      localStorage.setItem(\n        'cartItems',\n        JSON.stringify([...cartArray, { quantity, plantId, plantUnitPrice }])\n      );\n    }\n  };\n\n  const handleRemoveToCart = (plantId: number) => {\n    const updatedCart = cartArrayFromStorage.filter(\n      (cartItem) => cartItem.plantId !== plantId\n    );\n    setCartArray(updatedCart);\n    localStorage.setItem('cartItems', JSON.stringify(updatedCart));\n  };\n\n  const emptyCart = () => {\n    setCartArray([]);\n    localStorage.setItem('cartItems', JSON.stringify([]));\n  };\n\n  const handleLogOut = () => {\n    navigate('/login');\n    localStorage.removeItem('token');\n    setHasTokenInLocalStorage(false);\n  };\n\n  const updateUserProfileSuccess = () => {\n    setIsUpdateUserProfileSuccess(true);\n  };\n\n  const updateUserProfileSuccessMessage = () => {\n    setIsUpdateUserProfileSuccess(false);\n  };\n\n  const updateUserProfileError = () => {\n    setUpdateUserProfileErrorMessage('Something went wrong, please try again.');\n  };\n\n  const { userProfileUpdate } = useUpdateUserProfile(\n    updateUserProfileSuccess,\n    updateUserProfileError\n  );\n\n  const handleUserProfileUpdate = (data: RegisterData) => {\n    userProfileUpdate(data);\n  };\n\n  React.useEffect(() => {\n    const localStorageCartItems = localStorage.getItem('cartItems');\n    if (localStorageCartItems) {\n      setCartArrayFromStorage(JSON.parse(localStorageCartItems));\n    }\n  }, [cartArray]);\n\n  React.useEffect(() => {\n    if (cartArrayFromStorage.length > 0) {\n      setHasCartItems(true);\n    }\n    return () => {\n      setHasCartItems(false);\n    };\n  }, [cartArrayFromStorage.length]);\n\n  React.useEffect(() => {\n    const jwt = localStorage.getItem('token');\n\n    if (jwt) {\n      setHasTokenInLocalStorage(true);\n      const parsedJwt = parseJwt(jwt);\n      const expDate = new Date(parsedJwt.exp * 1000);\n      if (expDate < new Date()) {\n        navigate('/login');\n        localStorage.removeItem('token');\n        setHasTokenInLocalStorage(false);\n        return; //stops if this condition is true, it won't execute the line further down\n      }\n    }\n  }, [navigate]);\n\n  return (\n    <>\n      <Header\n        hasCartItems={hasCartItems}\n        hasTokenInLocalStorage={hasTokenInLocalStorage}\n      />\n      <CountProvider>\n        <Routes>\n          <Route path=\"/\" element={<HomePage />} />\n          <Route path=\"/plants\" element={<PlantsShopPage />} />\n          <Route\n            path=\"/plants/:id\"\n            element={<PlantDetailPage handleAddToCart={handleAddToCart} />}\n          />\n          <Route path=\"/login\" element={<LogInPage />} />\n          <Route path=\"/register\" element={<RegisterPage />} />\n          <Route\n            path=\"/users/profile\"\n            element={\n              <UserProfile\n                handleLogOut={handleLogOut}\n                isUpdateUserProfileSuccess={isUpdateUserProfileSuccess}\n                updateUserProfileSuccessMessage={\n                  updateUserProfileSuccessMessage\n                }\n              />\n            }\n          />\n          <Route\n            path=\"/users/profile/update\"\n            element={\n              <UserProfileUpdate\n                handleLogOut={handleLogOut}\n                updateUserProfileErrorMessage={updateUserProfileErrorMessage}\n                handleUserProfileUpdate={handleUserProfileUpdate}\n              />\n            }\n          />\n          <Route path=\"/admin/plantlist\" element={<AdminPlantListPage />} />\n          <Route\n            path=\"/cart\"\n            element={\n              <Cart\n                cartArrayFromStorage={cartArrayFromStorage}\n                handleRemoveToCart={handleRemoveToCart}\n              />\n            }\n          />\n          <Route path=\"/checkout\" element={<CheckoutPage />}>\n            <Route path=\"shipping\" element={<CheckoutShipping />} />\n            <Route\n              path=\"place-order\"\n              element={<CheckoutPlaceOrder emptyCart={emptyCart} />}\n            />\n          </Route>\n          <Route path=\"/order/:id\" element={<OrderPage />} />\n          <Route path=\"/order/:id/pay\" element={<OrderPaymentPage />} />\n          <Route\n            path=\"/order/:id/success\"\n            element={<OrderPaymentSuccessPage />}\n          />\n          <Route path=\"/myorders\" element={<MyOrdersPage />} />\n        </Routes>\n      </CountProvider>\n    </>\n  );\n}\n\nexport default App;\n","import { useMutation } from 'react-query';\nimport updateUserProfile from '../api/updateUserProfile';\nimport { RegisterData } from '../types';\nimport { useNavigate } from 'react-router-dom';\n\nexport const useUpdateUserProfile = (\n  updateUserProfileSuccess: () => void,\n  updateUserProfileError: () => void\n) => {\n  const navigate = useNavigate();\n\n  const {\n    mutate: userProfileUpdate,\n    isLoading: userProfileUpdateLoading,\n    isError: userProfileUpdateError,\n    data: userProfileUpdateData,\n  } = useMutation(\n    (formData: RegisterData) =>\n      updateUserProfile(formData).then((data) => data),\n    {\n      onSuccess: (data) => {\n        localStorage.setItem('token', data.token);\n        navigate('/users/profile');\n        updateUserProfileSuccess();\n      },\n      onError: () => {\n        updateUserProfileError();\n      },\n    }\n  );\n\n  return {\n    userProfileUpdate,\n    userProfileUpdateLoading,\n    userProfileUpdateError,\n    userProfileUpdateData,\n  };\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n\n  document.getElementById('root')\n);\n"],"sourceRoot":""}